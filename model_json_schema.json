{
  "title": "Model",
  "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
  "type": "object",
  "properties": {
    "identifier": {
      "title": "Identifier",
      "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[A-Za-z0-9_-]",
      "type": "string"
    },
    "display_name": {
      "title": "Display Name",
      "description": "Display name of the object with no character restrictions.",
      "type": "string"
    },
    "user_data": {
      "title": "User Data",
      "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
      "type": "object"
    },
    "type": {
      "title": "Type",
      "default": "Model",
      "pattern": "^Model$",
      "type": "string"
    },
    "version": {
      "title": "Version",
      "description": "Text string for the current version of the schema.",
      "default": "0.0.0",
      "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
      "type": "string"
    },
    "rooms": {
      "title": "Rooms",
      "description": "A list of Rooms in the model.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Room"
      }
    },
    "orphaned_faces": {
      "title": "Orphaned Faces",
      "description": "A list of Faces in the model that lack a parent Room. Note that orphaned Faces are not acceptable for Models that are to be exported for energy simulation.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Face"
      }
    },
    "orphaned_shades": {
      "title": "Orphaned Shades",
      "description": "A list of Shades in the model that lack a parent.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Shade"
      }
    },
    "orphaned_apertures": {
      "title": "Orphaned Apertures",
      "description": "A list of Apertures in the model that lack a parent Face. Note that orphaned Apertures are not acceptable for Models that are to be exported for energy simulation.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Aperture"
      }
    },
    "orphaned_doors": {
      "title": "Orphaned Doors",
      "description": "A list of Doors in the model that lack a parent Face. Note that orphaned Doors are not acceptable for Models that are to be exported for energy simulation.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Door"
      }
    },
    "units": {
      "description": "Text indicating the units in which the model geometry exists. This is used to scale the geometry to the correct units for simulation engines like EnergyPlus, which requires all geometry be in meters.",
      "default": "Meters",
      "allOf": [
        {
          "$ref": "#/definitions/Units"
        }
      ]
    },
    "tolerance": {
      "title": "Tolerance",
      "description": "The maximum difference between x, y, and z values at which vertices are considered equivalent. This value should be in the Model units and it is used in a variety of checks, including checks for whether Room faces form a closed volume and subsequently correcting all face normals point outward from the Room. A value of 0 will result in bypassing all checks so it is recommended that this always be a positive number when such checks have not already been performed on a Model. The default of 0.01 is suitable for models in meters.",
      "default": 0.01,
      "minimum": 0,
      "type": "number"
    },
    "angle_tolerance": {
      "title": "Angle Tolerance",
      "description": "The max angle difference in degrees that vertices are allowed to differ from one another in order to consider them colinear. This value is used in a variety of checks, including checks for whether Room faces form a closed volume and subsequently correcting all face normals point outward from the Room. A value of 0 will result in bypassing all checks so it is recommended that this always be a positive number when such checks have not already been performed on a given Model.",
      "default": 1.0,
      "minimum": 0,
      "type": "number"
    },
    "properties": {
      "title": "Properties",
      "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
      "allOf": [
        {
          "$ref": "#/definitions/ModelProperties"
        }
      ]
    }
  },
  "required": [
    "identifier",
    "properties"
  ],
  "additionalProperties": false,
  "definitions": {
    "Plane": {
      "title": "Plane",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Plane",
          "pattern": "^Plane$",
          "type": "string"
        },
        "n": {
          "title": "N",
          "description": "Plane normal as 3 (x, y, z) values.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "o": {
          "title": "O",
          "description": "Plane origin as 3 (x, y, z) values",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "x": {
          "title": "X",
          "description": "Plane x-axis as 3 (x, y, z) values. If None, it is autocalculated.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "n",
        "o"
      ],
      "additionalProperties": false
    },
    "Face3D": {
      "title": "Face3D",
      "description": "A single planar face in 3D space.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Face3D",
          "pattern": "^Face3D$",
          "type": "string"
        },
        "boundary": {
          "title": "Boundary",
          "description": "A list of points representing the outer boundary vertices of the face. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
          "minItems": 3,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 3,
            "maxItems": 3
          }
        },
        "holes": {
          "title": "Holes",
          "description": "Optional list of lists with one list for each hole in the face.Each hole should be a list of at least 3 points and each point a list of 3 (x, y, z) values. If None, it will be assumed that there are no holes in the face.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 3,
              "maxItems": 3
            },
            "minItems": 3
          }
        },
        "plane": {
          "title": "Plane",
          "description": "Optional Plane indicating the plane in which the face exists.If None, the plane will usually be derived from the boundary points.",
          "allOf": [
            {
              "$ref": "#/definitions/Plane"
            }
          ]
        }
      },
      "required": [
        "boundary"
      ],
      "additionalProperties": false
    },
    "FaceType": {
      "title": "FaceType",
      "description": "An enumeration.",
      "enum": [
        "Wall",
        "Floor",
        "RoofCeiling",
        "AirBoundary"
      ],
      "type": "string"
    },
    "Ground": {
      "title": "Ground",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Ground",
          "pattern": "^Ground$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Autocalculate": {
      "title": "Autocalculate",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Autocalculate",
          "pattern": "^Autocalculate$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Outdoors": {
      "title": "Outdoors",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Outdoors",
          "pattern": "^Outdoors$",
          "type": "string"
        },
        "sun_exposure": {
          "title": "Sun Exposure",
          "description": "A boolean noting whether the boundary is exposed to sun.",
          "default": true,
          "type": "boolean"
        },
        "wind_exposure": {
          "title": "Wind Exposure",
          "description": "A boolean noting whether the boundary is exposed to wind.",
          "default": true,
          "type": "boolean"
        },
        "view_factor": {
          "title": "View Factor",
          "description": "A number for the view factor to the ground. This can also be an Autocalculate object to have the view factor automatically calculated.",
          "default": {
            "type": "Autocalculate"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autocalculate"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Adiabatic": {
      "title": "Adiabatic",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Adiabatic",
          "pattern": "^Adiabatic$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Surface": {
      "title": "Surface",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Surface",
          "pattern": "^Surface$",
          "type": "string"
        },
        "boundary_condition_objects": {
          "title": "Boundary Condition Objects",
          "description": "A list of up to 3 object identifiers that are adjacent to this one. The first object is always the one that is immediately adjacent and is of the same object type (Face, Aperture, Door). When this boundary condition is applied to a Face, the second object in the tuple will be the parent Room of the adjacent object. When the boundary condition is applied to a sub-face (Door or Aperture), the second object will be the parent Face of the adjacent sub-face and the third object will be the parent Room of the adjacent sub-face.",
          "minItems": 2,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "boundary_condition_objects"
      ],
      "additionalProperties": false
    },
    "ShadeEnergyPropertiesAbridged": {
      "title": "ShadeEnergyPropertiesAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ShadeEnergyPropertiesAbridged",
          "pattern": "^ShadeEnergyPropertiesAbridged$",
          "type": "string"
        },
        "construction": {
          "title": "Construction",
          "description": "Identifier of a ShadeConstruction to set the reflectance and specularity of the Shade. If None, the construction is set by theparent Room construction_set, the Model global_construction_set or (in the case fo an orphaned shade) the EnergyPlus default of 0.2 diffuse reflectance.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "transmittance_schedule": {
          "title": "Transmittance Schedule",
          "description": "Identifier of a schedule to set the transmittance of the shade, which can vary throughout the simulation. If None, the shade will be completely opaque.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StateGeometryAbridged": {
      "title": "StateGeometryAbridged",
      "description": "A single planar geometry that can be assigned to Radiance states.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "StateGeometryAbridged",
          "pattern": "^StateGeometryAbridged$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "A string for a Honeybee Radiance Modifier identifier (default: None).",
          "type": "string"
        },
        "modifier_direct": {
          "title": "Modifier Direct",
          "description": "A string for Honeybee Radiance Modifier identifiers to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
          "type": "string"
        },
        "geometry": {
          "title": "Geometry",
          "description": "A ladybug_geometry Face3D.",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "geometry"
      ],
      "additionalProperties": false
    },
    "RadianceShadeStateAbridged": {
      "title": "RadianceShadeStateAbridged",
      "description": "RadianceShadeStateAbridged represents a single state for a dynamic Shade.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "RadianceShadeStateAbridged",
          "pattern": "^RadianceShadeStateAbridged$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "A Radiance Modifier identifier (default: None).",
          "type": "string"
        },
        "modifier_direct": {
          "title": "Modifier Direct",
          "description": "A Radiance Modifier identifier (default: None).",
          "type": "string"
        },
        "shades": {
          "title": "Shades",
          "description": "A list of StateGeometryAbridged objects (default: None).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateGeometryAbridged"
          }
        }
      },
      "additionalProperties": false
    },
    "ShadeRadiancePropertiesAbridged": {
      "title": "ShadeRadiancePropertiesAbridged",
      "description": "Radiance Properties for Honeybee Shade Abridged.",
      "type": "object",
      "properties": {
        "modifier": {
          "title": "Modifier",
          "description": "A string for a Honeybee Radiance Modifier (default: None).",
          "type": "string"
        },
        "modifier_blk": {
          "title": "Modifier Blk",
          "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ShadeRadiancePropertiesAbridged",
          "pattern": "^ShadeRadiancePropertiesAbridged$",
          "type": "string"
        },
        "dynamic_group_identifier": {
          "title": "Dynamic Group Identifier",
          "description": "An optional string to note the dynamic group '             'to which the Shade is a part of. Shades sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Shade is assumed to be static. (default: None).",
          "type": "string"
        },
        "states": {
          "title": "States",
          "description": "An optional list of abridged states (default: None).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadianceShadeStateAbridged"
          }
        }
      },
      "additionalProperties": false
    },
    "ShadePropertiesAbridged": {
      "title": "ShadePropertiesAbridged",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ShadePropertiesAbridged",
          "pattern": "^ShadePropertiesAbridged$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/ShadeEnergyPropertiesAbridged"
        },
        "radiance": {
          "$ref": "#/definitions/ShadeRadiancePropertiesAbridged"
        }
      }
    },
    "Shade": {
      "title": "Shade",
      "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "user_data": {
          "title": "User Data",
          "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "default": "Shade",
          "pattern": "^Shade$",
          "type": "string"
        },
        "geometry": {
          "title": "Geometry",
          "description": "Planar Face3D for the geometry.",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        },
        "properties": {
          "title": "Properties",
          "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
          "allOf": [
            {
              "$ref": "#/definitions/ShadePropertiesAbridged"
            }
          ]
        },
        "is_detached": {
          "title": "Is Detached",
          "description": "Boolean to note whether this shade is detached from any of the other geometry in the model. Cases where this should be True include shade representing surrounding buildings or context. Note that this should always be False for shades assigned to parent objects.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier",
        "geometry",
        "properties"
      ],
      "additionalProperties": false
    },
    "VentilationOpening": {
      "title": "VentilationOpening",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "VentilationOpening",
          "pattern": "^VentilationOpening$",
          "type": "string"
        },
        "fraction_area_operable": {
          "title": "Fraction Area Operable",
          "description": "A number for the fraction of the window area that is operable.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "fraction_height_operable": {
          "title": "Fraction Height Operable",
          "description": "A number for the fraction of the distance from the bottom of the window to the top that is operable",
          "default": 1.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "discharge_coefficient": {
          "title": "Discharge Coefficient",
          "description": "A number that will be multipled by the area of the window in the stack (buoyancy-driven) part of the equation to account for additional friction from window geometry, insect screens, etc. Typical values include 0.45, for unobstructed windows WITH insect screens and 0.65 for unobstructed windows WITHOUT insect screens. This value should be lowered if windows are of an awning or casement type and are not allowed to fully open.",
          "default": 0.45,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "wind_cross_vent": {
          "title": "Wind Cross Vent",
          "description": "Boolean to indicate if there is an opening of roughly equal area on the opposite side of the Room such that wind-driven cross ventilation will be induced. If False, the assumption is that the operable area is primarily on one side of the Room and there is no wind-driven ventilation.",
          "default": false,
          "type": "boolean"
        },
        "flow_coefficient_closed": {
          "title": "Flow Coefficient Closed",
          "description": "An optional number in kg/s-m, at 1 Pa per meter of crack length, used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. The DesignBuilder Cracks template defines the flow coefficient for a tight, low-leakage closed external window to be 0.00001, and the flow coefficient for a very poor, high-leakage closed external window to be 0.003.",
          "minimum": 0,
          "type": "number"
        },
        "flow_exponent_closed": {
          "title": "Flow Exponent Closed",
          "description": "An optional dimensionless number between 0.5 and 1 used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. This value represents the leak geometry impact on airflow, with 0.5 generally corresponding to turbulent orifice flow and 1 generally corresponding to laminar flow. The default of 0.65 is representative of many cases of wall and window leakage, used when the exponent cannot be measured.",
          "default": 0.65,
          "minimum": 0.5,
          "maximum": 1,
          "type": "number"
        },
        "two_way_threshold": {
          "title": "Two Way Threshold",
          "description": "A number in kg/m3 indicating the minimum density difference above which two-way flow may occur due to stack effect, required to run an AirflowNetwork simulation. This value is required because the air density difference between two zones (which drives two-way air flow) will tend towards division by zero errors as the air density difference approaches zero. The default of 0.0001 is a typical default value used for AirflowNetwork openings.",
          "default": 0.0001,
          "exclusiveMinimum": 0,
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "ApertureEnergyPropertiesAbridged": {
      "title": "ApertureEnergyPropertiesAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ApertureEnergyPropertiesAbridged",
          "pattern": "^ApertureEnergyPropertiesAbridged$",
          "type": "string"
        },
        "construction": {
          "title": "Construction",
          "description": "Identifier of a WindowConstruction for the aperture. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "vent_opening": {
          "title": "Vent Opening",
          "description": "An optional VentilationOpening to specify the operable portion of the Aperture.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationOpening"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "RadianceSubFaceStateAbridged": {
      "title": "RadianceSubFaceStateAbridged",
      "description": "RadianceSubFaceStateAbridged is an abridged state for a dynamic Aperture or Door.\n    ",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "RadianceSubFaceStateAbridged",
          "pattern": "^RadianceSubFaceStateAbridged$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "A Radiance Modifier identifier (default: None).",
          "type": "string"
        },
        "modifier_direct": {
          "title": "Modifier Direct",
          "description": "A Radiance Modifier identifier (default: None).",
          "type": "string"
        },
        "shades": {
          "title": "Shades",
          "description": "A list of StateGeometryAbridged objects (default: None).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateGeometryAbridged"
          }
        },
        "vmtx_geometry": {
          "title": "Vmtx Geometry",
          "description": "A Face3D for the view matrix geometry (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        },
        "dmtx_geometry": {
          "title": "Dmtx Geometry",
          "description": "A Face3D for the daylight matrix geometry (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ApertureRadiancePropertiesAbridged": {
      "title": "ApertureRadiancePropertiesAbridged",
      "description": "Radiance Properties for Honeybee Aperture Abridged.",
      "type": "object",
      "properties": {
        "modifier": {
          "title": "Modifier",
          "description": "A string for a Honeybee Radiance Modifier (default: None).",
          "type": "string"
        },
        "modifier_blk": {
          "title": "Modifier Blk",
          "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ApertureRadiancePropertiesAbridged",
          "pattern": "^ApertureRadiancePropertiesAbridged$",
          "type": "string"
        },
        "dynamic_group_identifier": {
          "title": "Dynamic Group Identifier",
          "description": "An optional string to note the dynamic group '             'to which the Aperture is a part of. Apertures sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Aperture is assumed to be static. (default: None).",
          "type": "string"
        },
        "states": {
          "title": "States",
          "description": "An optional list of abridged states (default: None).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadianceSubFaceStateAbridged"
          }
        }
      },
      "additionalProperties": false
    },
    "AperturePropertiesAbridged": {
      "title": "AperturePropertiesAbridged",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "AperturePropertiesAbridged",
          "pattern": "^AperturePropertiesAbridged$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/ApertureEnergyPropertiesAbridged"
        },
        "radiance": {
          "$ref": "#/definitions/ApertureRadiancePropertiesAbridged"
        }
      }
    },
    "Aperture": {
      "title": "Aperture",
      "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "user_data": {
          "title": "User Data",
          "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "default": "Aperture",
          "pattern": "^Aperture$",
          "type": "string"
        },
        "geometry": {
          "title": "Geometry",
          "description": "Planar Face3D for the geometry.",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        },
        "boundary_condition": {
          "title": "Boundary Condition",
          "anyOf": [
            {
              "$ref": "#/definitions/Outdoors"
            },
            {
              "$ref": "#/definitions/Surface"
            }
          ]
        },
        "is_operable": {
          "title": "Is Operable",
          "description": "Boolean to note whether the Aperture can be opened for ventilation.",
          "default": false,
          "type": "boolean"
        },
        "indoor_shades": {
          "title": "Indoor Shades",
          "description": "Shades assigned to the interior side of this object (eg. window sill, light shelf).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "outdoor_shades": {
          "title": "Outdoor Shades",
          "description": "Shades assigned to the exterior side of this object (eg. mullions, louvers).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "properties": {
          "title": "Properties",
          "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
          "allOf": [
            {
              "$ref": "#/definitions/AperturePropertiesAbridged"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "geometry",
        "boundary_condition",
        "properties"
      ],
      "additionalProperties": false
    },
    "DoorEnergyPropertiesAbridged": {
      "title": "DoorEnergyPropertiesAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "DoorEnergyPropertiesAbridged",
          "pattern": "^DoorEnergyPropertiesAbridged$",
          "type": "string"
        },
        "construction": {
          "title": "Construction",
          "description": "Identifier of an OpaqueConstruction or WindowConstruction for the door. Note that the host door must have the is_glass property set to True to assign a WindowConstruction. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "vent_opening": {
          "title": "Vent Opening",
          "description": "An optional VentilationOpening to specify the operable portion of the Door.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationOpening"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "DoorRadiancePropertiesAbridged": {
      "title": "DoorRadiancePropertiesAbridged",
      "description": "Radiance Properties for Honeybee Door Abridged.",
      "type": "object",
      "properties": {
        "modifier": {
          "title": "Modifier",
          "description": "A string for a Honeybee Radiance Modifier (default: None).",
          "type": "string"
        },
        "modifier_blk": {
          "title": "Modifier Blk",
          "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "DoorRadiancePropertiesAbridged",
          "pattern": "^DoorRadiancePropertiesAbridged$",
          "type": "string"
        },
        "dynamic_group_identifier": {
          "title": "Dynamic Group Identifier",
          "description": "An optional string to note the dynamic group '             'to which the Door is a part of. Doors sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Door is assumed to be static. (default: None).",
          "type": "string"
        },
        "states": {
          "title": "States",
          "description": "An optional list of abridged states (default: None).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadianceSubFaceStateAbridged"
          }
        }
      },
      "additionalProperties": false
    },
    "DoorPropertiesAbridged": {
      "title": "DoorPropertiesAbridged",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "DoorPropertiesAbridged",
          "pattern": "^DoorPropertiesAbridged$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/DoorEnergyPropertiesAbridged"
        },
        "radiance": {
          "$ref": "#/definitions/DoorRadiancePropertiesAbridged"
        }
      }
    },
    "Door": {
      "title": "Door",
      "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "user_data": {
          "title": "User Data",
          "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "default": "Door",
          "pattern": "^Door$",
          "type": "string"
        },
        "geometry": {
          "title": "Geometry",
          "description": "Planar Face3D for the geometry.",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        },
        "boundary_condition": {
          "title": "Boundary Condition",
          "anyOf": [
            {
              "$ref": "#/definitions/Outdoors"
            },
            {
              "$ref": "#/definitions/Surface"
            }
          ]
        },
        "is_glass": {
          "title": "Is Glass",
          "description": "Boolean to note whether this object is a glass door as opposed to an opaque door.",
          "default": false,
          "type": "boolean"
        },
        "indoor_shades": {
          "title": "Indoor Shades",
          "description": "Shades assigned to the interior side of this object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "outdoor_shades": {
          "title": "Outdoor Shades",
          "description": "Shades assigned to the exterior side of this object (eg. entryway awning).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "properties": {
          "title": "Properties",
          "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
          "allOf": [
            {
              "$ref": "#/definitions/DoorPropertiesAbridged"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "geometry",
        "boundary_condition",
        "properties"
      ],
      "additionalProperties": false
    },
    "AFNCrack": {
      "title": "AFNCrack",
      "description": "Properties for airflow through a crack.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "AFNCrack",
          "pattern": "^AFNCrack$",
          "type": "string"
        },
        "flow_coefficient": {
          "title": "Flow Coefficient",
          "description": "A number in kg/s-m at 1 Pa per meter of crack length at the conditions defined in the ReferenceCrack condition; required to run an AirflowNetwork simulation. The DesignBuilder Cracks template defines the flow coefficient for a tight, low-leakage wall to be 0.00001 and 0.001 for external and internal constructions, respectively. Flow coefficients for a very poor, high-leakage wall are defined to be 0.0004 and 0.019 for external and internal constructions, respectively.",
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "flow_exponent": {
          "title": "Flow Exponent",
          "description": "An optional dimensionless number between 0.5 and 1 used to calculate the crack mass flow rate; required to run an AirflowNetwork simulation. This value represents the leak geometry impact on airflow, with 0.5 generally corresponding to turbulent orifice flow and 1 generally corresponding to laminar flow. The default of 0.65 is representative of many cases of wall and window leakage, used when the exponent cannot be measured.",
          "default": 0.65,
          "minimum": 0.5,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "flow_coefficient"
      ],
      "additionalProperties": false
    },
    "FaceEnergyPropertiesAbridged": {
      "title": "FaceEnergyPropertiesAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "FaceEnergyPropertiesAbridged",
          "pattern": "^FaceEnergyPropertiesAbridged$",
          "type": "string"
        },
        "construction": {
          "title": "Construction",
          "description": "Identifier of an OpaqueConstruction for the Face. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "vent_crack": {
          "title": "Vent Crack",
          "description": "An optional AFNCrack to specify airflow through a surface crack used by the AirflowNetwork.",
          "allOf": [
            {
              "$ref": "#/definitions/AFNCrack"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "FaceRadiancePropertiesAbridged": {
      "title": "FaceRadiancePropertiesAbridged",
      "description": "Radiance Properties for Honeybee Face Abridged.",
      "type": "object",
      "properties": {
        "modifier": {
          "title": "Modifier",
          "description": "A string for a Honeybee Radiance Modifier (default: None).",
          "type": "string"
        },
        "modifier_blk": {
          "title": "Modifier Blk",
          "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "FaceRadiancePropertiesAbridged",
          "pattern": "^FaceRadiancePropertiesAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FacePropertiesAbridged": {
      "title": "FacePropertiesAbridged",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "FacePropertiesAbridged",
          "pattern": "^FacePropertiesAbridged$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/FaceEnergyPropertiesAbridged"
        },
        "radiance": {
          "$ref": "#/definitions/FaceRadiancePropertiesAbridged"
        }
      }
    },
    "Face": {
      "title": "Face",
      "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "user_data": {
          "title": "User Data",
          "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "default": "Face",
          "pattern": "^Face$",
          "type": "string"
        },
        "geometry": {
          "title": "Geometry",
          "description": "Planar Face3D for the geometry.",
          "allOf": [
            {
              "$ref": "#/definitions/Face3D"
            }
          ]
        },
        "face_type": {
          "$ref": "#/definitions/FaceType"
        },
        "boundary_condition": {
          "title": "Boundary Condition",
          "anyOf": [
            {
              "$ref": "#/definitions/Ground"
            },
            {
              "$ref": "#/definitions/Outdoors"
            },
            {
              "$ref": "#/definitions/Adiabatic"
            },
            {
              "$ref": "#/definitions/Surface"
            }
          ]
        },
        "apertures": {
          "title": "Apertures",
          "description": "Apertures assigned to this Face. Should be coplanar with this Face and completely within the boundary of the Face to be valid.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aperture"
          }
        },
        "doors": {
          "title": "Doors",
          "description": "Doors assigned to this Face. Should be coplanar with this Face and completely within the boundary of the Face to be valid.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Door"
          }
        },
        "indoor_shades": {
          "title": "Indoor Shades",
          "description": "Shades assigned to the interior side of this object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "outdoor_shades": {
          "title": "Outdoor Shades",
          "description": "Shades assigned to the exterior side of this object (eg. balcony, overhang).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "properties": {
          "title": "Properties",
          "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
          "allOf": [
            {
              "$ref": "#/definitions/FacePropertiesAbridged"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "geometry",
        "face_type",
        "boundary_condition",
        "properties"
      ],
      "additionalProperties": false
    },
    "PeopleAbridged": {
      "title": "PeopleAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "PeopleAbridged",
          "pattern": "^PeopleAbridged$",
          "type": "string"
        },
        "people_per_area": {
          "title": "People Per Area",
          "description": "People per floor area expressed as [people/m2]",
          "minimum": 0,
          "type": "number"
        },
        "occupancy_schedule": {
          "title": "Occupancy Schedule",
          "description": "Identifier of a schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "activity_schedule": {
          "title": "Activity Schedule",
          "description": "Identifier of a schedule for the activity of the occupants over the course of the year. The type of this schedule should be Power and the values of the schedule equal to the number of Watts given off by an individual person in the room.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "The radiant fraction of sensible heat released by people. The defaultvalue is 0.30.",
          "default": 0.3,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
          "default": {
            "type": "Autocalculate"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autocalculate"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        }
      },
      "required": [
        "identifier",
        "people_per_area",
        "occupancy_schedule",
        "activity_schedule"
      ],
      "additionalProperties": false
    },
    "LightingAbridged": {
      "title": "LightingAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "LightingAbridged",
          "pattern": "^LightingAbridged$",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Lighting per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "visible_fraction": {
          "title": "Visible Fraction",
          "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. The default value is `0.25`.",
          "default": 0.25,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "The fraction of heat from lights that is long-wave radiation. Default value is `0.32`.",
          "default": 0.32,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "return_air_fraction": {
          "title": "Return Air Fraction",
          "description": "The fraction of the heat from lights that goes into the zone return air. Default value is `0`.",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "baseline_watts_per_area": {
          "title": "Baseline Watts Per Area",
          "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
          "default": 11.84029,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "ElectricEquipmentAbridged": {
      "title": "ElectricEquipmentAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Equipment level per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "lost_fraction": {
          "title": "Lost Fraction",
          "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "type": {
          "title": "Type",
          "default": "ElectricEquipmentAbridged",
          "pattern": "^ElectricEquipmentAbridged$",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "GasEquipmentAbridged": {
      "title": "GasEquipmentAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Equipment level per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "lost_fraction": {
          "title": "Lost Fraction",
          "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "type": {
          "title": "Type",
          "default": "GasEquipmentAbridged",
          "pattern": "^GasEquipmentAbridged$",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "ServiceHotWaterAbridged": {
      "title": "ServiceHotWaterAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ServiceHotWaterAbridged",
          "pattern": "^ServiceHotWaterAbridged$",
          "type": "string"
        },
        "flow_per_area": {
          "title": "Flow Per Area",
          "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the hot water use over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "target_temperature": {
          "title": "Target Temperature",
          "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
          "default": 60,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "sensible_fraction": {
          "title": "Sensible Fraction",
          "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
          "default": 0.2,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
          "default": 0.05,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "flow_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "InfiltrationAbridged": {
      "title": "InfiltrationAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "InfiltrationAbridged",
          "pattern": "^InfiltrationAbridged$",
          "type": "string"
        },
        "flow_per_exterior_area": {
          "title": "Flow Per Exterior Area",
          "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "constant_coefficient": {
          "title": "Constant Coefficient",
          "default": 1,
          "minimum": 0,
          "type": "number"
        },
        "temperature_coefficient": {
          "title": "Temperature Coefficient",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "velocity_coefficient": {
          "title": "Velocity Coefficient",
          "default": 0,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "flow_per_exterior_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "VentilationAbridged": {
      "title": "VentilationAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "VentilationAbridged",
          "pattern": "^VentilationAbridged$",
          "type": "string"
        },
        "flow_per_person": {
          "title": "Flow Per Person",
          "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "flow_per_area": {
          "title": "Flow Per Area",
          "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "air_changes_per_hour": {
          "title": "Air Changes Per Hour",
          "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "flow_per_zone": {
          "title": "Flow Per Zone",
          "description": "Intensity of ventilation in m3/s for the entire Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "SetpointAbridged": {
      "title": "SetpointAbridged",
      "description": "Used to specify information about the setpoint schedule.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "SetpointAbridged",
          "pattern": "^SetpointAbridged$",
          "type": "string"
        },
        "cooling_schedule": {
          "title": "Cooling Schedule",
          "description": "Identifier of the schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "heating_schedule": {
          "title": "Heating Schedule",
          "description": "Identifier of the schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "humidifying_schedule": {
          "title": "Humidifying Schedule",
          "description": "Identifier of the schedule for the humidification setpoint. The values in this schedule should be in [%].",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "dehumidifying_schedule": {
          "title": "Dehumidifying Schedule",
          "description": "Identifier of the schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "cooling_schedule",
        "heating_schedule"
      ],
      "additionalProperties": false
    },
    "VentilationControlAbridged": {
      "title": "VentilationControlAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "VentilationControlAbridged",
          "pattern": "^VentilationControlAbridged$",
          "type": "string"
        },
        "min_indoor_temperature": {
          "title": "Min Indoor Temperature",
          "description": "A number for the minimum indoor temperature at which to ventilate in Celsius. Typically, this variable is used to initiate ventilation.",
          "default": -100,
          "minimum": -100,
          "maximum": 100,
          "type": "number"
        },
        "max_indoor_temperature": {
          "title": "Max Indoor Temperature",
          "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a maximum temperature at which point ventilation is stopped and a cooling system is turned on.",
          "default": 100,
          "minimum": -100,
          "maximum": 100,
          "type": "number"
        },
        "min_outdoor_temperature": {
          "title": "Min Outdoor Temperature",
          "description": "A number for the minimum outdoor temperature at which to ventilate in Celsius. This can be used to ensure ventilative cooling does not happen during the winter even if the Room is above the min_indoor_temperature.",
          "default": -100,
          "minimum": -100,
          "maximum": 100,
          "type": "number"
        },
        "max_outdoor_temperature": {
          "title": "Max Outdoor Temperature",
          "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a limit for when it is considered too hot outside for ventilative cooling.",
          "default": 100,
          "minimum": -100,
          "maximum": 100,
          "type": "number"
        },
        "delta_temperature": {
          "title": "Delta Temperature",
          "description": "A number for the temperature differential in Celsius between indoor and outdoor below which ventilation is shut off.  This should usually be a positive number so that ventilation only occurs when the outdoors is cooler than the indoors. Negative numbers indicate how much hotter the outdoors can be than the indoors before ventilation is stopped.",
          "default": -100,
          "minimum": -100,
          "maximum": 100,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Identifier of the schedule for the ventilation over the course of the year. Note that this is applied on top of any setpoints. The type of this schedule should be On/Off and values should be either 0 (no possibility of ventilation) or 1 (ventilation possible).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoomEnergyPropertiesAbridged": {
      "title": "RoomEnergyPropertiesAbridged",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "RoomEnergyPropertiesAbridged",
          "pattern": "^RoomEnergyPropertiesAbridged$",
          "type": "string"
        },
        "construction_set": {
          "title": "Construction Set",
          "description": "Identifier of a ConstructionSet to specify all default constructions for the Faces, Apertures, and Doors of the Room. If None, the Room will use the Model global_construction_set.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "program_type": {
          "title": "Program Type",
          "description": "Identifier of a ProgramType to specify all default schedules and loads for the Room. If None, the Room will have no loads or setpoints.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "hvac": {
          "title": "Hvac",
          "description": "An optional identifier of a HVAC system (such as an IdealAirSystem) that specifies how the Room is conditioned. If None, it will be assumed that the Room is not conditioned.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "people": {
          "title": "People",
          "description": "People object to describe the occupancy of the Room.",
          "allOf": [
            {
              "$ref": "#/definitions/PeopleAbridged"
            }
          ]
        },
        "lighting": {
          "title": "Lighting",
          "description": "Lighting object to describe the lighting usage of the Room.",
          "allOf": [
            {
              "$ref": "#/definitions/LightingAbridged"
            }
          ]
        },
        "electric_equipment": {
          "title": "Electric Equipment",
          "description": "ElectricEquipment object to describe the electric equipment usage.",
          "allOf": [
            {
              "$ref": "#/definitions/ElectricEquipmentAbridged"
            }
          ]
        },
        "gas_equipment": {
          "title": "Gas Equipment",
          "description": "GasEquipment object to describe the gas equipment usage.",
          "allOf": [
            {
              "$ref": "#/definitions/GasEquipmentAbridged"
            }
          ]
        },
        "service_hot_water": {
          "title": "Service Hot Water",
          "description": "ServiceHotWater object to describe the hot water usage.",
          "allOf": [
            {
              "$ref": "#/definitions/ServiceHotWaterAbridged"
            }
          ]
        },
        "infiltration": {
          "title": "Infiltration",
          "description": "Infiltration object to to describe the outdoor air leakage.",
          "allOf": [
            {
              "$ref": "#/definitions/InfiltrationAbridged"
            }
          ]
        },
        "ventilation": {
          "title": "Ventilation",
          "description": "Ventilation object for the minimum outdoor air requirement.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationAbridged"
            }
          ]
        },
        "setpoint": {
          "title": "Setpoint",
          "description": "Setpoint object for the temperature setpoints of the Room.",
          "allOf": [
            {
              "$ref": "#/definitions/SetpointAbridged"
            }
          ]
        },
        "window_vent_control": {
          "title": "Window Vent Control",
          "description": "An optional VentilationControl object to dictate the opening of windows. If None, the windows will never open.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationControlAbridged"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "RoomRadiancePropertiesAbridged": {
      "title": "RoomRadiancePropertiesAbridged",
      "description": "Abridged Radiance Properties for Honeybee Room.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "RoomRadiancePropertiesAbridged",
          "pattern": "^RoomRadiancePropertiesAbridged$",
          "type": "string"
        },
        "modifier_set": {
          "title": "Modifier Set",
          "description": "An identifier for a unique Room-Assigned ModifierSet (default: None).",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoomPropertiesAbridged": {
      "title": "RoomPropertiesAbridged",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "RoomPropertiesAbridged",
          "pattern": "^RoomPropertiesAbridged$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/RoomEnergyPropertiesAbridged"
        },
        "radiance": {
          "$ref": "#/definitions/RoomRadiancePropertiesAbridged"
        }
      }
    },
    "Room": {
      "title": "Room",
      "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "user_data": {
          "title": "User Data",
          "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "default": "Room",
          "pattern": "^Room$",
          "type": "string"
        },
        "faces": {
          "title": "Faces",
          "description": "Faces that together form the closed volume of a room.",
          "minItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Face"
          }
        },
        "indoor_shades": {
          "title": "Indoor Shades",
          "description": "Shades assigned to the interior side of this object (eg. partitions, tables).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "outdoor_shades": {
          "title": "Outdoor Shades",
          "description": "Shades assigned to the exterior side of this object (eg. trees, landscaping).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shade"
          }
        },
        "multiplier": {
          "title": "Multiplier",
          "description": "An integer noting how many times this Room is repeated. Multipliers are used to speed up the calculation when similar Rooms are repeated more than once. Essentially, a given simulation with the Room is run once and then the result is mutliplied by the multiplier.",
          "default": 1,
          "minimum": 1,
          "type": "integer"
        },
        "story": {
          "title": "Story",
          "description": "Text string for the story identifier to which this Room belongs. Rooms sharing the same story identifier are considered part of the same story in a Model.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "properties": {
          "title": "Properties",
          "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
          "allOf": [
            {
              "$ref": "#/definitions/RoomPropertiesAbridged"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "faces",
        "properties"
      ],
      "additionalProperties": false
    },
    "Units": {
      "title": "Units",
      "description": "An enumeration.",
      "enum": [
        "Meters",
        "Millimeters",
        "Feet",
        "Inches",
        "Centimeters"
      ],
      "type": "string"
    },
    "WallConstructionSetAbridged": {
      "title": "WallConstructionSetAbridged",
      "description": "A set of constructions for wall assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WallConstructionSetAbridged",
          "pattern": "^WallConstructionSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FloorConstructionSetAbridged": {
      "title": "FloorConstructionSetAbridged",
      "description": "A set of constructions for floor assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "FloorConstructionSetAbridged",
          "pattern": "^FloorConstructionSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoofCeilingConstructionSetAbridged": {
      "title": "RoofCeilingConstructionSetAbridged",
      "description": "A set of constructions for roof and ceiling assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "RoofCeilingConstructionSetAbridged",
          "pattern": "^RoofCeilingConstructionSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApertureConstructionSetAbridged": {
      "title": "ApertureConstructionSetAbridged",
      "description": "A set of constructions for aperture assemblies.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ApertureConstructionSetAbridged",
          "pattern": "^ApertureConstructionSetAbridged$",
          "type": "string"
        },
        "interior_construction": {
          "title": "Interior Construction",
          "description": "Identifier for a WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "window_construction": {
          "title": "Window Construction",
          "description": "Identifier for a WindowConstruction for all apertures with a Surface boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "skylight_construction": {
          "title": "Skylight Construction",
          "description": "Identifier for a WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "operable_construction": {
          "title": "Operable Construction",
          "description": "Identifier for a WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DoorConstructionSetAbridged": {
      "title": "DoorConstructionSetAbridged",
      "description": "A set of constructions for door assemblies.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "DoorConstructionSetAbridged",
          "pattern": "^DoorConstructionSetAbridged$",
          "type": "string"
        },
        "interior_construction": {
          "title": "Interior Construction",
          "description": "Identifier for an OpaqueConstruction for all opaque doors with a Surface boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "overhead_construction": {
          "title": "Overhead Construction",
          "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "exterior_glass_construction": {
          "title": "Exterior Glass Construction",
          "description": "Identifier for a WindowConstruction for all glass doors with an Outdoors boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "interior_glass_construction": {
          "title": "Interior Glass Construction",
          "description": "Identifier for a WindowConstruction for all glass doors with a Surface boundary condition.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ConstructionSetAbridged": {
      "title": "ConstructionSetAbridged",
      "description": "A set of constructions for different surface types and boundary conditions.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ConstructionSetAbridged",
          "pattern": "^ConstructionSetAbridged$",
          "type": "string"
        },
        "wall_set": {
          "title": "Wall Set",
          "description": "A WallConstructionSetAbridged object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/WallConstructionSetAbridged"
            }
          ]
        },
        "floor_set": {
          "title": "Floor Set",
          "description": "A FloorConstructionSetAbridged object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/FloorConstructionSetAbridged"
            }
          ]
        },
        "roof_ceiling_set": {
          "title": "Roof Ceiling Set",
          "description": "A RoofCeilingConstructionSetAbridged object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/RoofCeilingConstructionSetAbridged"
            }
          ]
        },
        "aperture_set": {
          "title": "Aperture Set",
          "description": "A ApertureConstructionSetAbridged object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/ApertureConstructionSetAbridged"
            }
          ]
        },
        "door_set": {
          "title": "Door Set",
          "description": "A DoorConstructionSetAbridged object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/DoorConstructionSetAbridged"
            }
          ]
        },
        "shade_construction": {
          "title": "Shade Construction",
          "description": "The identifier of a ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "air_boundary_construction": {
          "title": "Air Boundary Construction",
          "description": "The identifier of an AirBoundaryConstruction to set the properties of Faces with an AirBoundary type.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Roughness": {
      "title": "Roughness",
      "description": "Relative roughness of a particular material layer.",
      "enum": [
        "VeryRough",
        "Rough",
        "MediumRough",
        "MediumSmooth",
        "Smooth",
        "VerySmooth"
      ],
      "type": "string"
    },
    "EnergyMaterial": {
      "title": "EnergyMaterial",
      "description": "Opaque material representing a layer within an opaque construction.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyMaterial",
          "pattern": "^EnergyMaterial$",
          "type": "string"
        },
        "roughness": {
          "default": "MediumRough",
          "allOf": [
            {
              "$ref": "#/definitions/Roughness"
            }
          ]
        },
        "thickness": {
          "title": "Thickness",
          "description": "Thickness of the material layer in meters.",
          "exclusiveMinimum": 0,
          "maximum": 3,
          "type": "number"
        },
        "conductivity": {
          "title": "Conductivity",
          "description": "Thermal conductivity of the material layer in W/(m-K).",
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "density": {
          "title": "Density",
          "description": "Density of the material layer in kg/m3.",
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "specific_heat": {
          "title": "Specific Heat",
          "description": "Specific heat of the material layer in J/(kg-K).",
          "minimum": 100,
          "type": "number"
        },
        "thermal_absorptance": {
          "title": "Thermal Absorptance",
          "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
          "default": 0.9,
          "exclusiveMinimum": 0,
          "maximum": 0.99999,
          "type": "number"
        },
        "solar_absorptance": {
          "title": "Solar Absorptance",
          "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "visible_absorptance": {
          "title": "Visible Absorptance",
          "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "thickness",
        "conductivity",
        "density",
        "specific_heat"
      ],
      "additionalProperties": false
    },
    "EnergyMaterialNoMass": {
      "title": "EnergyMaterialNoMass",
      "description": "No mass opaque material representing a layer within an opaque construction.\n\nUsed when only the thermal resistance (R value) of the material is known.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyMaterialNoMass",
          "pattern": "^EnergyMaterialNoMass$",
          "type": "string"
        },
        "r_value": {
          "title": "R Value",
          "description": "The thermal resistance (R-value) of the material layer [m2-K/W].",
          "minimum": 0.001,
          "type": "number"
        },
        "roughness": {
          "default": "MediumRough",
          "allOf": [
            {
              "$ref": "#/definitions/Roughness"
            }
          ]
        },
        "thermal_absorptance": {
          "title": "Thermal Absorptance",
          "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
          "default": 0.9,
          "exclusiveMinimum": 0,
          "maximum": 0.99999,
          "type": "number"
        },
        "solar_absorptance": {
          "title": "Solar Absorptance",
          "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "visible_absorptance": {
          "title": "Visible Absorptance",
          "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "r_value"
      ],
      "additionalProperties": false
    },
    "OpaqueConstruction": {
      "title": "OpaqueConstruction",
      "description": "Construction for opaque objects (Face, Shade, Door).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "OpaqueConstruction",
          "pattern": "^OpaqueConstruction$",
          "type": "string"
        },
        "layers": {
          "title": "Layers",
          "description": "List of strings for opaque material identifiers. The order of the materials is from exterior to interior.",
          "minItems": 1,
          "maxItems": 10,
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "materials": {
          "title": "Materials",
          "description": "List of opaque materials. The order of the materials is from outside to inside.",
          "minItems": 1,
          "maxItems": 10,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/EnergyMaterial"
              },
              {
                "$ref": "#/definitions/EnergyMaterialNoMass"
              }
            ]
          }
        }
      },
      "required": [
        "identifier",
        "layers",
        "materials"
      ],
      "additionalProperties": false
    },
    "WallConstructionSet": {
      "title": "WallConstructionSet",
      "description": "A set of constructions for wall assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "WallConstructionSet",
          "pattern": "^WallConstructionSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FloorConstructionSet": {
      "title": "FloorConstructionSet",
      "description": "A set of constructions for floor assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "FloorConstructionSet",
          "pattern": "^FloorConstructionSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoofCeilingConstructionSet": {
      "title": "RoofCeilingConstructionSet",
      "description": "A set of constructions for roof and ceiling assemblies.",
      "type": "object",
      "properties": {
        "interior_construction": {
          "title": "Interior Construction",
          "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "ground_construction": {
          "title": "Ground Construction",
          "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "RoofCeilingConstructionSet",
          "pattern": "^RoofCeilingConstructionSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnergyWindowMaterialSimpleGlazSys": {
      "title": "EnergyWindowMaterialSimpleGlazSys",
      "description": "Describe an entire glazing system rather than individual layers.\n\nUsed when only very limited information is available on the glazing layers or when\nspecific performance levels are being targeted.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialSimpleGlazSys",
          "pattern": "^EnergyWindowMaterialSimpleGlazSys$",
          "type": "string"
        },
        "u_factor": {
          "title": "U Factor",
          "description": "Used to describe the value for window system U-Factor, or overall heat transfer coefficient in W/(m2-K).",
          "exclusiveMinimum": 0,
          "maximum": 5.8,
          "type": "number"
        },
        "shgc": {
          "title": "Shgc",
          "description": "Unitless  quantity describing Solar Heat Gain Coefficient for normal incidence and vertical orientation.",
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 1,
          "type": "number"
        },
        "vt": {
          "title": "Vt",
          "description": "The fraction of visible light falling on the window that makes it through the glass at normal incidence.",
          "default": 0.54,
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "u_factor",
        "shgc"
      ],
      "additionalProperties": false
    },
    "EnergyWindowMaterialGlazing": {
      "title": "EnergyWindowMaterialGlazing",
      "description": "Describe a single glass pane corresponding to a layer in a window construction.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialGlazing",
          "pattern": "^EnergyWindowMaterialGlazing$",
          "type": "string"
        },
        "thickness": {
          "title": "Thickness",
          "description": "The surface-to-surface of the glass in meters. Default value is 0.003.",
          "default": 0.003,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "solar_transmittance": {
          "title": "Solar Transmittance",
          "description": "Transmittance of solar radiation through the glass at normal incidence. Default value is 0.85 for clear glass.",
          "default": 0.85,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "solar_reflectance": {
          "title": "Solar Reflectance",
          "description": "Reflectance of solar radiation off of the front side of the glass at normal incidence, averaged over the solar spectrum. Default value is 0.075 for clear glass.",
          "default": 0.075,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "solar_reflectance_back": {
          "title": "Solar Reflectance Back",
          "description": "Reflectance of solar radiation off of the back side of the glass at normal incidence, averaged over the solar spectrum.",
          "type": "number"
        },
        "visible_transmittance": {
          "title": "Visible Transmittance",
          "description": "Transmittance of visible light through the glass at normal incidence. Default value is 0.9 for clear glass.",
          "default": 0.9,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "visible_reflectance": {
          "title": "Visible Reflectance",
          "description": "Reflectance of visible light off of the front side of the glass at normal incidence. Default value is 0.075 for clear glass.",
          "default": 0.075,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "visible_reflectance_back": {
          "title": "Visible Reflectance Back",
          "description": "Reflectance of visible light off of the back side of the glass at normal incidence averaged over the solar spectrum and weighted by the response of the human eye.",
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "infrared_transmittance": {
          "title": "Infrared Transmittance",
          "description": "Long-wave transmittance at normal incidence.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "emissivity": {
          "title": "Emissivity",
          "description": "Infrared hemispherical emissivity of the front (outward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
          "default": 0.84,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "emissivity_back": {
          "title": "Emissivity Back",
          "description": "Infrared hemispherical emissivity of the back (inward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
          "default": 0.84,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "conductivity": {
          "title": "Conductivity",
          "description": "Thermal conductivity of the glass in W/(m-K). Default value is 0.9, which is  typical for clear glass without a low-e coating.",
          "default": 0.9,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "dirt_correction": {
          "title": "Dirt Correction",
          "description": "Factor that corrects for the presence of dirt on the glass. A default value of 1 indicates the glass is clean.",
          "default": 1,
          "type": "number"
        },
        "solar_diffusing": {
          "title": "Solar Diffusing",
          "description": "Takes values True and False. If False (default), the beam solar radiation incident on the glass is transmitted as beam radiation with no diffuse component.If True, the beam  solar radiation incident on the glass is transmitted as hemispherical diffuse radiation with no beam component.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "GasType": {
      "title": "GasType",
      "description": "An enumeration.",
      "enum": [
        "Air",
        "Argon",
        "Krypton",
        "Xenon"
      ],
      "type": "string"
    },
    "EnergyWindowMaterialGas": {
      "title": "EnergyWindowMaterialGas",
      "description": "Create single layer of gas in a window construction.\n\nCan be combined with EnergyWindowMaterialGlazing to make multi-pane windows.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialGas",
          "pattern": "^EnergyWindowMaterialGas$",
          "type": "string"
        },
        "thickness": {
          "title": "Thickness",
          "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
          "default": 0.0125,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "gas_type": {
          "default": "Air",
          "allOf": [
            {
              "$ref": "#/definitions/GasType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "EnergyWindowMaterialGasCustom": {
      "title": "EnergyWindowMaterialGasCustom",
      "description": "Create single layer of custom gas.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialGasCustom",
          "pattern": "^EnergyWindowMaterialGasCustom$",
          "type": "string"
        },
        "thickness": {
          "title": "Thickness",
          "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
          "default": 0.0125,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "conductivity_coeff_a": {
          "title": "Conductivity Coeff A",
          "description": "The A coefficient for gas conductivity in W/(m-K).",
          "type": "number"
        },
        "conductivity_coeff_b": {
          "title": "Conductivity Coeff B",
          "description": "The B coefficient for gas conductivity in W/(m-K2).",
          "default": 0,
          "type": "number"
        },
        "conductivity_coeff_c": {
          "title": "Conductivity Coeff C",
          "description": "The C coefficient for gas conductivity in W/(m-K3).",
          "default": 0,
          "type": "number"
        },
        "viscosity_coeff_a": {
          "title": "Viscosity Coeff A",
          "description": "The A coefficient for gas viscosity in kg/(m-s).",
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "viscosity_coeff_b": {
          "title": "Viscosity Coeff B",
          "description": "The B coefficient for gas viscosity in kg/(m-s-K).",
          "default": 0,
          "type": "number"
        },
        "viscosity_coeff_c": {
          "title": "Viscosity Coeff C",
          "description": "The C coefficient for gas viscosity in kg/(m-s-K2).",
          "default": 0,
          "type": "number"
        },
        "specific_heat_coeff_a": {
          "title": "Specific Heat Coeff A",
          "description": "The A coefficient for gas specific heat in J/(kg-K).",
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "specific_heat_coeff_b": {
          "title": "Specific Heat Coeff B",
          "description": "The B coefficient for gas specific heat in J/(kg-K2).",
          "default": 0,
          "type": "number"
        },
        "specific_heat_coeff_c": {
          "title": "Specific Heat Coeff C",
          "description": "The C coefficient for gas specific heat in J/(kg-K3).",
          "default": 0,
          "type": "number"
        },
        "specific_heat_ratio": {
          "title": "Specific Heat Ratio",
          "description": "The specific heat ratio for gas.",
          "exclusiveMinimum": 1,
          "type": "number"
        },
        "molecular_weight": {
          "title": "Molecular Weight",
          "description": "The molecular weight for gas in g/mol.",
          "minimum": 20,
          "maximum": 200,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "conductivity_coeff_a",
        "viscosity_coeff_a",
        "specific_heat_coeff_a",
        "specific_heat_ratio",
        "molecular_weight"
      ],
      "additionalProperties": false
    },
    "EnergyWindowMaterialGasMixture": {
      "title": "EnergyWindowMaterialGasMixture",
      "description": "Create a mixture of two to four different gases to fill the panes of multiple\npane windows.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialGasMixture",
          "pattern": "^EnergyWindowMaterialGasMixture$",
          "type": "string"
        },
        "thickness": {
          "title": "Thickness",
          "description": "The thickness of the gas mixture layer in meters.",
          "default": 0.0125,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "gas_types": {
          "description": "List of gases in the gas mixture.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GasType"
          },
          "minItems": 2,
          "maxItems": 4
        },
        "gas_fractions": {
          "title": "Gas Fractions",
          "description": "A list of fractional numbers describing the volumetric fractions of gas types in the mixture. This list must align with the gas_types list and must sum to 1.",
          "minItems": 2,
          "maxItems": 4,
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "identifier",
        "gas_types",
        "gas_fractions"
      ],
      "additionalProperties": false
    },
    "WindowConstruction": {
      "title": "WindowConstruction",
      "description": "Construction for window objects (Aperture, Door).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WindowConstruction",
          "pattern": "^WindowConstruction$",
          "type": "string"
        },
        "layers": {
          "title": "Layers",
          "description": "List of strings for glazing or gas material identifiers. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
          "minItems": 1,
          "maxItems": 8,
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "materials": {
          "title": "Materials",
          "description": "List of glazing and gas materials. The order of the materials is from outside to inside. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
          "minItems": 1,
          "maxItems": 8,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/EnergyWindowMaterialSimpleGlazSys"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGlazing"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGas"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGasCustom"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGasMixture"
              }
            ]
          }
        }
      },
      "required": [
        "identifier",
        "layers",
        "materials"
      ],
      "additionalProperties": false
    },
    "ApertureConstructionSet": {
      "title": "ApertureConstructionSet",
      "description": "A set of constructions for aperture assemblies.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ApertureConstructionSet",
          "pattern": "^ApertureConstructionSet$",
          "type": "string"
        },
        "interior_construction": {
          "title": "Interior Construction",
          "description": "A WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        },
        "window_construction": {
          "title": "Window Construction",
          "description": "A WindowConstruction for all apertures with a Surface boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        },
        "skylight_construction": {
          "title": "Skylight Construction",
          "description": "A WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        },
        "operable_construction": {
          "title": "Operable Construction",
          "description": "A WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "DoorConstructionSet": {
      "title": "DoorConstructionSet",
      "description": "A set of constructions for door assemblies.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "DoorConstructionSet",
          "pattern": "^DoorConstructionSet$",
          "type": "string"
        },
        "interior_construction": {
          "title": "Interior Construction",
          "description": "An OpaqueConstruction for all opaque doors with a Surface boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "exterior_construction": {
          "title": "Exterior Construction",
          "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "overhead_construction": {
          "title": "Overhead Construction",
          "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
          "allOf": [
            {
              "$ref": "#/definitions/OpaqueConstruction"
            }
          ]
        },
        "exterior_glass_construction": {
          "title": "Exterior Glass Construction",
          "description": "A WindowConstruction for all glass doors with an Outdoors boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        },
        "interior_glass_construction": {
          "title": "Interior Glass Construction",
          "description": "A WindowConstruction for all glass doors with a Surface boundary condition.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ShadeConstruction": {
      "title": "ShadeConstruction",
      "description": "Construction for Shade objects.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ShadeConstruction",
          "pattern": "^ShadeConstruction$",
          "type": "string"
        },
        "solar_reflectance": {
          "title": "Solar Reflectance",
          "description": "A number for the solar reflectance of the construction.",
          "default": 0.2,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "visible_reflectance": {
          "title": "Visible Reflectance",
          "description": "A number for the visible reflectance of the construction.",
          "default": 0.2,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "is_specular": {
          "title": "Is Specular",
          "description": "Boolean to note whether the reflection off the shade is diffuse (False) or specular (True). Set to True if the construction is representing a glass facade or a mirror material.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "ScheduleDay": {
      "title": "ScheduleDay",
      "description": "Used to describe the daily schedule for a single simulation day.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleDay",
          "pattern": "^ScheduleDay$",
          "type": "string"
        },
        "values": {
          "title": "Values",
          "description": "A list of floats or integers for the values of the schedule. The length of this list must match the length of the times list.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "times": {
          "title": "Times",
          "description": "A list of lists with each sub-list possesing 2 values for [hour, minute]. The length of the master list must match the length of the values list. Each time in the master list represents the time of day that the corresponding value begins to take effect. For example [(0,0), (9,0), (17,0)] in combination with the values [0, 1, 0] denotes a schedule value of 0 from 0:00 to 9:00, a value of 1 from 9:00 to 17:00 and 0 from 17:00 to the end of the day. Note that this representation of times as the \"time of beginning\" is a different convention than EnergyPlus, which uses \"time until\".",
          "default": [
            0,
            0
          ],
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 2,
            "maxItems": 2
          }
        },
        "interpolate": {
          "title": "Interpolate",
          "description": "Boolean to note whether values in between times should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier",
        "values"
      ],
      "additionalProperties": false
    },
    "ScheduleRuleAbridged": {
      "title": "ScheduleRuleAbridged",
      "description": "Schedule rule including a ScheduleDay and when it should be applied..",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ScheduleRuleAbridged",
          "pattern": "^ScheduleRuleAbridged$",
          "type": "string"
        },
        "schedule_day": {
          "title": "Schedule Day",
          "description": "The identifier of a ScheduleDay object associated with this rule.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "apply_sunday": {
          "title": "Apply Sunday",
          "description": "Boolean noting whether to apply schedule_day on Sundays.",
          "default": false,
          "type": "boolean"
        },
        "apply_monday": {
          "title": "Apply Monday",
          "description": "Boolean noting whether to apply schedule_day on Mondays.",
          "default": false,
          "type": "boolean"
        },
        "apply_tuesday": {
          "title": "Apply Tuesday",
          "description": "Boolean noting whether to apply schedule_day on Tuesdays.",
          "default": false,
          "type": "boolean"
        },
        "apply_wednesday": {
          "title": "Apply Wednesday",
          "description": "Boolean noting whether to apply schedule_day on Wednesdays.",
          "default": false,
          "type": "boolean"
        },
        "apply_thursday": {
          "title": "Apply Thursday",
          "description": "Boolean noting whether to apply schedule_day on Thursdays.",
          "default": false,
          "type": "boolean"
        },
        "apply_friday": {
          "title": "Apply Friday",
          "description": "Boolean noting whether to apply schedule_day on Fridays.",
          "default": false,
          "type": "boolean"
        },
        "apply_saturday": {
          "title": "Apply Saturday",
          "description": "Boolean noting whether to apply schedule_day on Saturdays.",
          "default": false,
          "type": "boolean"
        },
        "start_date": {
          "title": "Start Date",
          "description": "A list of two integers for [month, day], representing the start date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
          "default": [
            1,
            1
          ],
          "minItems": 2,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "end_date": {
          "title": "End Date",
          "description": "A list of two integers for [month, day], representing the end date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
          "default": [
            12,
            31
          ],
          "minItems": 2,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "schedule_day"
      ],
      "additionalProperties": false
    },
    "NoLimit": {
      "title": "NoLimit",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "NoLimit",
          "pattern": "^NoLimit$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ScheduleNumericType": {
      "title": "ScheduleNumericType",
      "description": "Designates how the range values are validated.",
      "enum": [
        "Continuous",
        "Discrete"
      ],
      "type": "string"
    },
    "ScheduleUnitType": {
      "title": "ScheduleUnitType",
      "description": "An enumeration.",
      "enum": [
        "Dimensionless",
        "Temperature",
        "DeltaTemperature",
        "PrecipitationRate",
        "Angle",
        "ConvectionCoefficient",
        "ActivityLevel",
        "Velocity",
        "Capacity",
        "Power",
        "Availability",
        "Percent",
        "Control",
        "Mode"
      ],
      "type": "string"
    },
    "ScheduleTypeLimit": {
      "title": "ScheduleTypeLimit",
      "description": "Specifies the data types and limits for values contained in schedules.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleTypeLimit",
          "pattern": "^ScheduleTypeLimit$",
          "type": "string"
        },
        "lower_limit": {
          "title": "Lower Limit",
          "description": "Lower limit for the schedule type or NoLimit.",
          "default": {
            "type": "NoLimit"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/NoLimit"
            },
            {
              "type": "number"
            }
          ]
        },
        "upper_limit": {
          "title": "Upper Limit",
          "description": "Upper limit for the schedule type or NoLimit.",
          "default": {
            "type": "NoLimit"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/NoLimit"
            },
            {
              "type": "number"
            }
          ]
        },
        "numeric_type": {
          "default": "Continuous",
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleNumericType"
            }
          ]
        },
        "unit_type": {
          "default": "Dimensionless",
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleUnitType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "ScheduleRuleset": {
      "title": "ScheduleRuleset",
      "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleRuleset",
          "pattern": "^ScheduleRuleset$",
          "type": "string"
        },
        "day_schedules": {
          "title": "Day Schedules",
          "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleDay"
          }
        },
        "default_day_schedule": {
          "title": "Default Day Schedule",
          "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "schedule_rules": {
          "title": "Schedule Rules",
          "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleRuleAbridged"
          }
        },
        "holiday_schedule": {
          "title": "Holiday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "summer_designday_schedule": {
          "title": "Summer Designday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "winter_designday_schedule": {
          "title": "Winter Designday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "schedule_type_limit": {
          "title": "Schedule Type Limit",
          "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleTypeLimit"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "day_schedules",
        "default_day_schedule"
      ],
      "additionalProperties": false
    },
    "ScheduleFixedInterval": {
      "title": "ScheduleFixedInterval",
      "description": "Used to specify a start date and a list of values for a period of analysis.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleFixedInterval",
          "pattern": "^ScheduleFixedInterval$",
          "type": "string"
        },
        "values": {
          "title": "Values",
          "description": "A list of timeseries values occuring at each timestep over the course of the simulation.",
          "minItems": 24,
          "maxItems": 527040,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "schedule_type_limit": {
          "title": "Schedule Type Limit",
          "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleTypeLimit"
            }
          ]
        },
        "timestep": {
          "title": "Timestep",
          "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
          "default": 1,
          "type": "integer"
        },
        "start_date": {
          "title": "Start Date",
          "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
          "default": [
            1,
            1
          ],
          "minItems": 2,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "placeholder_value": {
          "title": "Placeholder Value",
          "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
          "default": 0,
          "type": "number"
        },
        "interpolate": {
          "title": "Interpolate",
          "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier",
        "values"
      ],
      "additionalProperties": false
    },
    "AirBoundaryConstruction": {
      "title": "AirBoundaryConstruction",
      "description": "Construction for Air Boundary objects.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "AirBoundaryConstruction",
          "pattern": "^AirBoundaryConstruction$",
          "type": "string"
        },
        "air_mixing_per_area": {
          "title": "Air Mixing Per Area",
          "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
          "default": 0.1,
          "minimum": 0,
          "type": "number"
        },
        "air_mixing_schedule": {
          "title": "Air Mixing Schedule",
          "description": "A fractional schedule as a ScheduleRuleset or ScheduleFixedInterval for the air mixing schedule across the construction.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "air_mixing_schedule"
      ],
      "additionalProperties": false
    },
    "ConstructionSet": {
      "title": "ConstructionSet",
      "description": "A set of constructions for different surface types and boundary conditions.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ConstructionSet",
          "pattern": "^ConstructionSet$",
          "type": "string"
        },
        "wall_set": {
          "title": "Wall Set",
          "description": "A WallConstructionSet object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/WallConstructionSet"
            }
          ]
        },
        "floor_set": {
          "title": "Floor Set",
          "description": "A FloorConstructionSet object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/FloorConstructionSet"
            }
          ]
        },
        "roof_ceiling_set": {
          "title": "Roof Ceiling Set",
          "description": "A RoofCeilingConstructionSet object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/RoofCeilingConstructionSet"
            }
          ]
        },
        "aperture_set": {
          "title": "Aperture Set",
          "description": "A ApertureConstructionSet object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/ApertureConstructionSet"
            }
          ]
        },
        "door_set": {
          "title": "Door Set",
          "description": "A DoorConstructionSet object for this ConstructionSet.",
          "allOf": [
            {
              "$ref": "#/definitions/DoorConstructionSet"
            }
          ]
        },
        "shade_construction": {
          "title": "Shade Construction",
          "description": "A ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
          "allOf": [
            {
              "$ref": "#/definitions/ShadeConstruction"
            }
          ]
        },
        "air_boundary_construction": {
          "title": "Air Boundary Construction",
          "description": "An AirBoundaryConstruction to set the properties of Faces with an AirBoundary type.",
          "allOf": [
            {
              "$ref": "#/definitions/AirBoundaryConstruction"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "OpaqueConstructionAbridged": {
      "title": "OpaqueConstructionAbridged",
      "description": "Construction for opaque objects (Face, Shade, Door).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "OpaqueConstructionAbridged",
          "pattern": "^OpaqueConstructionAbridged$",
          "type": "string"
        },
        "layers": {
          "title": "Layers",
          "description": "List of strings for opaque material identifiers. The order of the materials is from exterior to interior.",
          "minItems": 1,
          "maxItems": 10,
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        }
      },
      "required": [
        "identifier",
        "layers"
      ],
      "additionalProperties": false
    },
    "WindowConstructionAbridged": {
      "title": "WindowConstructionAbridged",
      "description": "Construction for window objects (Aperture, Door).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WindowConstructionAbridged",
          "pattern": "^WindowConstructionAbridged$",
          "type": "string"
        },
        "layers": {
          "title": "Layers",
          "description": "List of strings for glazing or gas material identifiers. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
          "minItems": 1,
          "maxItems": 8,
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        }
      },
      "required": [
        "identifier",
        "layers"
      ],
      "additionalProperties": false
    },
    "ShadeLocation": {
      "title": "ShadeLocation",
      "description": "Choices for where a shade material is located in a window assembly.",
      "enum": [
        "Interior",
        "Between",
        "Exterior"
      ],
      "type": "string"
    },
    "ControlType": {
      "title": "ControlType",
      "description": "Choices for how the shading device is controlled.",
      "enum": [
        "AlwaysOn",
        "OnIfHighSolarOnWindow",
        "OnIfHighHorizontalSolar",
        "OnIfHighOutdoorAirTemperature",
        "OnIfHighZoneAirTemperature",
        "OnIfHighZoneCooling",
        "OnNightIfLowOutdoorTempAndOffDay",
        "OnNightIfLowInsideTempAndOffDay",
        "OnNightIfHeatingAndOffDay"
      ],
      "type": "string"
    },
    "WindowConstructionShadeAbridged": {
      "title": "WindowConstructionShadeAbridged",
      "description": "Construction for window objects with an included shade layer.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WindowConstructionShadeAbridged",
          "pattern": "^WindowConstructionShadeAbridged$",
          "type": "string"
        },
        "window_construction": {
          "title": "Window Construction",
          "description": "A WindowConstructionAbridged object that serves as the \"switched off\" version of the construction (aka. the \"bare construction\"). The shade_material and shade_location will be used to modify this starting construction.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstructionAbridged"
            }
          ]
        },
        "shade_material": {
          "title": "Shade Material",
          "description": "Identifier of a An EnergyWindowMaterialShade or an EnergyWindowMaterialBlind that serves as the shading layer for this construction. This can also be an EnergyWindowMaterialGlazing, which will indicate that the WindowConstruction has a dynamically-controlled glass pane like an electrochromic window assembly.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "shade_location": {
          "description": "Text to indicate where in the window assembly the shade_material is located.  Note that the WindowConstruction must have at least one gas gap to use the \"Between\" option. Also note that, for a WindowConstruction with more than one gas gap, the \"Between\" option defalts to using the inner gap as this is the only option that EnergyPlus supports.",
          "default": "Interior",
          "allOf": [
            {
              "$ref": "#/definitions/ShadeLocation"
            }
          ]
        },
        "control_type": {
          "description": "Text to indicate how the shading device is controlled, which determines when the shading is \u201con\u201d or \u201coff.\u201d",
          "default": "AlwaysOn",
          "allOf": [
            {
              "$ref": "#/definitions/ControlType"
            }
          ]
        },
        "setpoint": {
          "title": "Setpoint",
          "description": "A number that corresponds to the specified control_type. This can be a value in (W/m2), (C) or (W) depending upon the control type.Note that this value cannot be None for any control type except \"AlwaysOn.\"",
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "An optional schedule identifier to be applied on top of the control_type. If None, the control_type will govern all behavior of the construction.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "window_construction",
        "shade_material"
      ],
      "additionalProperties": false
    },
    "AirBoundaryConstructionAbridged": {
      "title": "AirBoundaryConstructionAbridged",
      "description": "Construction for Air Boundary objects.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "AirBoundaryConstructionAbridged",
          "pattern": "^AirBoundaryConstructionAbridged$",
          "type": "string"
        },
        "air_mixing_per_area": {
          "title": "Air Mixing Per Area",
          "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
          "default": 0.1,
          "minimum": 0,
          "type": "number"
        },
        "air_mixing_schedule": {
          "title": "Air Mixing Schedule",
          "description": "Identifier of a fractional schedule for the air mixing schedule across the construction.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "air_mixing_schedule"
      ],
      "additionalProperties": false
    },
    "EnergyWindowMaterialShade": {
      "title": "EnergyWindowMaterialShade",
      "description": "This object specifies the properties of window shade materials.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialShade",
          "pattern": "^EnergyWindowMaterialShade$",
          "type": "string"
        },
        "solar_transmittance": {
          "title": "Solar Transmittance",
          "description": "The transmittance averaged over the solar spectrum. It is assumed independent of incidence angle. Default value is 0.4.",
          "default": 0.4,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "solar_reflectance": {
          "title": "Solar Reflectance",
          "description": "The reflectance averaged over the solar spectrum. It us assumed same on both sides of shade and independent of incidence angle. Default value is 0.5",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "visible_transmittance": {
          "title": "Visible Transmittance",
          "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4.",
          "default": 0.4,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "visible_reflectance": {
          "title": "Visible Reflectance",
          "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4",
          "default": 0.4,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "emissivity": {
          "title": "Emissivity",
          "description": "The effective long-wave infrared hemispherical emissivity. It is assumed same on both sides of shade. Default value is 0.9.",
          "default": 0.9,
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 1,
          "type": "number"
        },
        "infrared_transmittance": {
          "title": "Infrared Transmittance",
          "description": "The effective long-wave transmittance. It is assumed independent of incidence angle. Default value is 0.",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "thickness": {
          "title": "Thickness",
          "description": "The thickness of the shade material in meters. Default value is 0.005.",
          "default": 0.005,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "conductivity": {
          "title": "Conductivity",
          "description": "The conductivity of the shade material in W/(m-K). Default value is 0.1.",
          "default": 0.1,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "distance_to_glass": {
          "title": "Distance To Glass",
          "description": "The distance from shade to adjacent glass in meters. Default value is 0.05",
          "default": 0.05,
          "minimum": 0.001,
          "maximum": 1,
          "type": "number"
        },
        "top_opening_multiplier": {
          "title": "Top Opening Multiplier",
          "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "bottom_opening_multiplier": {
          "title": "Bottom Opening Multiplier",
          "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "left_opening_multiplier": {
          "title": "Left Opening Multiplier",
          "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "right_opening_multiplier": {
          "title": "Right Opening Multiplier",
          "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "airflow_permeability": {
          "title": "Airflow Permeability",
          "description": "The fraction of the shade surface that is open to air flow. If air cannot pass through the shade material, airflow_permeability = 0. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 0.8,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "SlatOrientation": {
      "title": "SlatOrientation",
      "description": "An enumeration.",
      "enum": [
        "Horizontal",
        "Vertical"
      ],
      "type": "string"
    },
    "EnergyWindowMaterialBlind": {
      "title": "EnergyWindowMaterialBlind",
      "description": "Window blind material consisting of flat, equally-spaced slats.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "EnergyWindowMaterialBlind",
          "pattern": "^EnergyWindowMaterialBlind$",
          "type": "string"
        },
        "slat_orientation": {
          "default": "Horizontal",
          "allOf": [
            {
              "$ref": "#/definitions/SlatOrientation"
            }
          ]
        },
        "slat_width": {
          "title": "Slat Width",
          "description": "The width of slat measured from edge to edge in meters.",
          "default": 0.025,
          "exclusiveMinimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "slat_separation": {
          "title": "Slat Separation",
          "description": "The distance between the front of a slat and the back of the adjacent slat in meters.",
          "default": 0.01875,
          "exclusiveMinimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "slat_thickness": {
          "title": "Slat Thickness",
          "description": "The distance between the faces of a slat in meters. The default value is 0.001.",
          "default": 0.001,
          "exclusiveMinimum": 0,
          "maximum": 0.1,
          "type": "number"
        },
        "slat_angle": {
          "title": "Slat Angle",
          "description": "The angle (degrees) between the glazing outward normal and the slat outward normal where the outward normal points away from the front face of the slat (degrees). The default value is 45.",
          "default": 45,
          "minimum": 0,
          "maximum": 180,
          "type": "number"
        },
        "slat_conductivity": {
          "title": "Slat Conductivity",
          "description": "The thermal conductivity of the slat in W/(m-K). Default value is 221.",
          "default": 221,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "beam_solar_transmittance": {
          "title": "Beam Solar Transmittance",
          "description": "The beam solar transmittance of the slat, assumed to be independent of angle of incidence on the slat. Any transmitted beam radiation is assumed to be 100% diffuse (i.e., slats are translucent). The default value is 0.",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "beam_solar_reflectance": {
          "title": "Beam Solar Reflectance",
          "description": "The beam solar reflectance of the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "beam_solar_reflectance_back": {
          "title": "Beam Solar Reflectance Back",
          "description": "The beam solar reflectance of the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_solar_transmittance": {
          "title": "Diffuse Solar Transmittance",
          "description": "The slat transmittance for hemisperically diffuse solar radiation. Default value is 0.",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_solar_reflectance": {
          "title": "Diffuse Solar Reflectance",
          "description": "The front-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_solar_reflectance_back": {
          "title": "Diffuse Solar Reflectance Back",
          "description": "The back-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "beam_visible_transmittance": {
          "title": "Beam Visible Transmittance",
          "description": "The beam visible transmittance of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "beam_visible_reflectance": {
          "title": "Beam Visible Reflectance",
          "description": "The beam visible reflectance on the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "beam_visible_reflectance_back": {
          "title": "Beam Visible Reflectance Back",
          "description": "The beam visible reflectance on the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_visible_transmittance": {
          "title": "Diffuse Visible Transmittance",
          "description": "The slat transmittance for hemispherically diffuse visible radiation. This value should equal \u201cSlat Beam Visible Transmittance.\u201d",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_visible_reflectance": {
          "title": "Diffuse Visible Reflectance",
          "description": "The front-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cFront Side Slat Beam Visible Reflectance.\u201d Default value is 0.5.",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "diffuse_visible_reflectance_back": {
          "title": "Diffuse Visible Reflectance Back",
          "description": "The back-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cBack Side Slat Beam Visible Reflectance. Default value is 0.5.\u201d",
          "default": 0.5,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "infrared_transmittance": {
          "title": "Infrared Transmittance",
          "description": "The slat infrared hemispherical transmittance. It is zero for solid metallic, wooden or glass slats, but may be non-zero in some cases such as for thin plastic slats. The default value is 0.",
          "default": 0,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "emissivity": {
          "title": "Emissivity",
          "description": "Front side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
          "default": 0.9,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "emissivity_back": {
          "title": "Emissivity Back",
          "description": "Back side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
          "default": 0.9,
          "exclusiveMaximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "distance_to_glass": {
          "title": "Distance To Glass",
          "description": "The distance from the mid-plane of the blind to the adjacent glass in meters. The default value is 0.05.",
          "default": 0.05,
          "minimum": 0.01,
          "maximum": 1,
          "type": "number"
        },
        "top_opening_multiplier": {
          "title": "Top Opening Multiplier",
          "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. The default value is 0.5",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "bottom_opening_multiplier": {
          "title": "Bottom Opening Multiplier",
          "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. The default value is 0.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "left_opening_multiplier": {
          "title": "Left Opening Multiplier",
          "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "right_opening_multiplier": {
          "title": "Right Opening Multiplier",
          "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WindowConstructionShade": {
      "title": "WindowConstructionShade",
      "description": "Construction for window objects (Aperture, Door).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WindowConstructionShade",
          "pattern": "^WindowConstructionShade$",
          "type": "string"
        },
        "window_construction": {
          "title": "Window Construction",
          "description": "A WindowConstruction object that serves as the \"switched off\" version of the construction (aka. the \"bare construction\"). The shade_material and shade_location will be used to modify this starting construction.",
          "allOf": [
            {
              "$ref": "#/definitions/WindowConstruction"
            }
          ]
        },
        "shade_material": {
          "title": "Shade Material",
          "description": "Identifier of a An EnergyWindowMaterialShade or an EnergyWindowMaterialBlind that serves as the shading layer for this construction. This can also be an EnergyWindowMaterialGlazing, which will indicate that the WindowConstruction has a dynamically-controlled glass pane like an electrochromic window assembly.",
          "anyOf": [
            {
              "$ref": "#/definitions/EnergyWindowMaterialShade"
            },
            {
              "$ref": "#/definitions/EnergyWindowMaterialBlind"
            },
            {
              "$ref": "#/definitions/EnergyWindowMaterialGlazing"
            }
          ]
        },
        "shade_location": {
          "description": "Text to indicate where in the window assembly the shade_material is located.  Note that the WindowConstruction must have at least one gas gap to use the \"Between\" option. Also note that, for a WindowConstruction with more than one gas gap, the \"Between\" option defalts to using the inner gap as this is the only option that EnergyPlus supports.",
          "default": "Interior",
          "allOf": [
            {
              "$ref": "#/definitions/ShadeLocation"
            }
          ]
        },
        "control_type": {
          "description": "Text to indicate how the shading device is controlled, which determines when the shading is \u201con\u201d or \u201coff.\u201d",
          "default": "AlwaysOn",
          "allOf": [
            {
              "$ref": "#/definitions/ControlType"
            }
          ]
        },
        "setpoint": {
          "title": "Setpoint",
          "description": "A number that corresponds to the specified control_type. This can be a value in (W/m2), (C) or (W) depending upon the control type.Note that this value cannot be None for any control type except \"AlwaysOn.\"",
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "An optional ScheduleRuleset or ScheduleFixedInterval to be applied on top of the control_type. If None, the control_type will govern all behavior of the construction.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "window_construction",
        "shade_material"
      ],
      "additionalProperties": false
    },
    "EconomizerType": {
      "title": "EconomizerType",
      "description": "An enumeration.",
      "enum": [
        "NoEconomizer",
        "DifferentialDryBulb",
        "DifferentialEnthalpy"
      ],
      "type": "string"
    },
    "Autosize": {
      "title": "Autosize",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Autosize",
          "pattern": "^Autosize$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "IdealAirSystemAbridged": {
      "title": "IdealAirSystemAbridged",
      "description": "Provides a model for an ideal HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "IdealAirSystemAbridged",
          "pattern": "^IdealAirSystemAbridged$",
          "type": "string"
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the ideal air system. Economizers will mix in a greater amount of outdoor air to cool the zone (rather than running the cooling system) when the zone needs cooling and the outdoor air is cooler than the zone.",
          "default": "DifferentialDryBulb",
          "allOf": [
            {
              "$ref": "#/definitions/EconomizerType"
            }
          ]
        },
        "demand_controlled_ventilation": {
          "title": "Demand Controlled Ventilation",
          "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the zone.",
          "default": false,
          "type": "boolean"
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "heating_air_temperature": {
          "title": "Heating Air Temperature",
          "description": "A number for the maximum heating supply air temperature [C].",
          "default": 50,
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 100,
          "type": "number"
        },
        "cooling_air_temperature": {
          "title": "Cooling Air Temperature",
          "description": "A number for the minimum cooling supply air temperature [C].",
          "default": 13,
          "exclusiveMinimum": -100,
          "exclusiveMaximum": 50,
          "type": "number"
        },
        "heating_limit": {
          "title": "Heating Limit",
          "description": "A number for the maximum heating capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the heating capacity.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "$ref": "#/definitions/NoLimit"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "cooling_limit": {
          "title": "Cooling Limit",
          "description": "A number for the maximum cooling capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the cooling capacity.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "$ref": "#/definitions/NoLimit"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "heating_availability": {
          "title": "Heating Availability",
          "description": "An optional identifier of a schedule to set the availability of heating over the course of the simulation.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "cooling_availability": {
          "title": "Cooling Availability",
          "description": "An optional identifier of a schedule to set the availability of cooling over the course of the simulation.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Vintages": {
      "title": "Vintages",
      "description": "An enumeration.",
      "enum": [
        "ASHRAE_2013",
        "ASHRAE_2010",
        "ASHRAE_2007",
        "ASHRAE_2004",
        "DOE_Ref_1980_2004",
        "DOE_Ref_Pre_1980"
      ],
      "type": "string"
    },
    "AllAirEconomizerType": {
      "title": "AllAirEconomizerType",
      "description": "An enumeration.",
      "enum": [
        "Inferred",
        "NoEconomizer",
        "DifferentialDryBulb",
        "DifferentialEnthalpy"
      ],
      "type": "string"
    },
    "VAVEquipmentType": {
      "title": "VAVEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "VAV_Chiller_Boiler",
        "VAV_Chiller_ASHP",
        "VAV_Chiller_DHW",
        "VAV_Chiller_PFP",
        "VAV_Chiller_GasCoil",
        "VAV_ACChiller_Boiler",
        "VAV_ACChiller_ASHP",
        "VAV_ACChiller_DHW",
        "VAV_ACChiller_PFP",
        "VAV_ACChiller_GasCoil",
        "VAV_DCW_Boiler",
        "VAV_DCW_ASHP",
        "VAV_DCW_DHW",
        "VAV_DCW_PFP",
        "VAV_DCW_GasCoil"
      ],
      "type": "string"
    },
    "VAV": {
      "title": "VAV",
      "description": "Variable Air Volume (VAV) HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration). If Inferred, the economizer will be set to whatever is recommended for the given vintage.",
          "default": "Inferred",
          "allOf": [
            {
              "$ref": "#/definitions/AllAirEconomizerType"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "VAV",
          "pattern": "^VAV$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
          "default": "VAV_Chiller_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/VAVEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "PVAVEquipmentType": {
      "title": "PVAVEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "PVAV_Boiler",
        "PVAV_ASHP",
        "PVAV_DHW",
        "PVAV_PFP",
        "PVAV_BoilerElectricReheat"
      ],
      "type": "string"
    },
    "PVAV": {
      "title": "PVAV",
      "description": "Packaged Variable Air Volume (PVAV) HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration). If Inferred, the economizer will be set to whatever is recommended for the given vintage.",
          "default": "Inferred",
          "allOf": [
            {
              "$ref": "#/definitions/AllAirEconomizerType"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "PVAV",
          "pattern": "^PVAV$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
          "default": "PVAV_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/PVAVEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "PSZEquipmentType": {
      "title": "PSZEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "PSZAC_ElectricBaseboard",
        "PSZAC_BoilerBaseboard",
        "PSZAC_DHWBaseboard",
        "PSZAC_GasHeaters",
        "PSZAC_ElectricCoil",
        "PSZAC_GasCoil",
        "PSZAC_Boiler",
        "PSZAC_ASHP",
        "PSZAC_DHW",
        "PSZAC",
        "PSZAC_DCW_ElectricBaseboard",
        "PSZAC_DCW_BoilerBaseboard",
        "PSZAC_DCW_GasHeaters",
        "PSZAC_DCW_ElectricCoil",
        "PSZAC_DCW_GasCoil",
        "PSZAC_DCW_Boiler",
        "PSZAC_DCW_ASHP",
        "PSZAC_DCW_DHW",
        "PSZAC_DCW",
        "PSZHP"
      ],
      "type": "string"
    },
    "PSZ": {
      "title": "PSZ",
      "description": "Packaged Single-Zone (PSZ) HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration). If Inferred, the economizer will be set to whatever is recommended for the given vintage.",
          "default": "Inferred",
          "allOf": [
            {
              "$ref": "#/definitions/AllAirEconomizerType"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "PSZ",
          "pattern": "^PSZ$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the PVAVEquipmentType enumeration.",
          "default": "PSZAC_ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/PSZEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "PTACEquipmentType": {
      "title": "PTACEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "PTAC_ElectricBaseboard",
        "PTAC_BoilerBaseboard",
        "PTAC_DHWBaseboard",
        "PTAC_GasHeaters",
        "PTAC_ElectricCoil",
        "PTAC_GasCoil",
        "PTAC_Boiler",
        "PTAC_ASHP",
        "PTAC_DHW",
        "PTAC",
        "PTHP"
      ],
      "type": "string"
    },
    "PTAC": {
      "title": "PTAC",
      "description": "Packaged Terminal Air Conditioning (PTAC) or Heat Pump (PTHP) HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration). If Inferred, the economizer will be set to whatever is recommended for the given vintage.",
          "default": "Inferred",
          "allOf": [
            {
              "$ref": "#/definitions/AllAirEconomizerType"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "PTAC",
          "pattern": "^PTAC$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the PTACEquipmentType enumeration.",
          "default": "PTAC_ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/PTACEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "FurnaceEquipmentType": {
      "title": "FurnaceEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "Furnace"
      ],
      "type": "string"
    },
    "ForcedAirFurnace": {
      "title": "ForcedAirFurnace",
      "description": "Forced Air Furnace HVAC system. Intended for spaces only requiring heating.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "economizer_type": {
          "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration). If Inferred, the economizer will be set to whatever is recommended for the given vintage.",
          "default": "Inferred",
          "allOf": [
            {
              "$ref": "#/definitions/AllAirEconomizerType"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "ForcedAirFurnace",
          "pattern": "^ForcedAirFurnace$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the FurnaceEquipmentType enumeration.",
          "default": "Furnace",
          "allOf": [
            {
              "$ref": "#/definitions/FurnaceEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "FCUwithDOASEquipmentType": {
      "title": "FCUwithDOASEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "DOAS_FCU_Chiller_Boiler",
        "DOAS_FCU_Chiller_ASHP",
        "DOAS_FCU_Chiller_DHW",
        "DOAS_FCU_Chiller_ElectricBaseboard",
        "DOAS_FCU_Chiller_GasHeaters",
        "DOAS_FCU_Chiller",
        "DOAS_FCU_ACChiller_Boiler",
        "DOAS_FCU_ACChiller_ASHP",
        "DOAS_FCU_ACChiller_DHW",
        "DOAS_FCU_ACChiller_ElectricBaseboard",
        "DOAS_FCU_ACChiller_GasHeaters",
        "DOAS_FCU_ACChiller",
        "DOAS_FCU_DCW_Boiler",
        "DOAS_FCU_DCW_ASHP",
        "DOAS_FCU_DCW_DHW",
        "DOAS_FCU_DCW_ElectricBaseboard",
        "DOAS_FCU_DCW_GasHeaters",
        "DOAS_FCU_DCW"
      ],
      "type": "string"
    },
    "FCUwithDOAS": {
      "title": "FCUwithDOAS",
      "description": "Fan Coil Unit (FCU) with DOAS HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "FCUwithDOAS",
          "pattern": "^FCUwithDOAS$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the FCUwithDOASEquipmentType enumeration.",
          "default": "DOAS_FCU_Chiller_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/FCUwithDOASEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WSHPwithDOASEquipmentType": {
      "title": "WSHPwithDOASEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "DOAS_WSHP_FluidCooler_Boiler",
        "DOAS_WSHP_CoolingTower_Boiler",
        "DOAS_WSHP_GSHP",
        "DOAS_WSHP_DCW_DHW"
      ],
      "type": "string"
    },
    "WSHPwithDOAS": {
      "title": "WSHPwithDOAS",
      "description": "Water Source Heat Pump (WSHP) with DOAS HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "WSHPwithDOAS",
          "pattern": "^WSHPwithDOAS$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the WSHPwithDOASEquipmentType enumeration.",
          "default": "DOAS_WSHP_FluidCooler_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/WSHPwithDOASEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "VRFwithDOASEquipmentType": {
      "title": "VRFwithDOASEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "DOAS_VRF"
      ],
      "type": "string"
    },
    "VRFwithDOAS": {
      "title": "VRFwithDOAS",
      "description": "Variable Refrigerant Flow (VRF) with DOAS HVAC system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "sensible_heat_recovery": {
          "title": "Sensible Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "latent_heat_recovery": {
          "title": "Latent Heat Recovery",
          "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system. If None or Autosize, it will be whatever is recommended for the given vintage.",
          "default": {
            "type": "Autosize"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autosize"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "VRFwithDOAS",
          "pattern": "^VRFwithDOAS$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the VRFwithDOASEquipmentType enumeration.",
          "default": "DOAS_VRF",
          "allOf": [
            {
              "$ref": "#/definitions/VRFwithDOASEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "FCUEquipmentType": {
      "title": "FCUEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "FCU_Chiller_Boiler",
        "FCU_Chiller_ASHP",
        "FCU_Chiller_DHW",
        "FCU_Chiller_ElectricBaseboard",
        "FCU_Chiller_GasHeaters",
        "FCU_Chiller",
        "FCU_ACChiller_Boiler",
        "FCU_ACChiller_ASHP",
        "FCU_ACChiller_DHW",
        "FCU_ACChiller_ElectricBaseboard",
        "FCU_ACChiller_GasHeaters",
        "FCU_ACChiller",
        "FCU_DCW_Boiler",
        "FCU_DCW_ASHP",
        "FCU_DCW_DHW",
        "FCU_DCW_ElectricBaseboard",
        "FCU_DCW_GasHeaters",
        "FCU_DCW"
      ],
      "type": "string"
    },
    "FCU": {
      "title": "FCU",
      "description": "Fan Coil Unit (FCU) heating/cooling system (with no ventilation).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "FCU",
          "pattern": "^FCU$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the FCUEquipmentType enumeration.",
          "default": "FCU_Chiller_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/FCUEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WSHPEquipmentType": {
      "title": "WSHPEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "WSHP_FluidCooler_Boiler",
        "WSHP_CoolingTower_Boiler",
        "WSHP_GSHP",
        "WSHP_DCW_DHW"
      ],
      "type": "string"
    },
    "WSHP": {
      "title": "WSHP",
      "description": "Direct evaporative cooling systems (with optional heating).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "WSHP",
          "pattern": "^WSHP$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the WSHPEquipmentType enumeration.",
          "default": "WSHP_FluidCooler_Boiler",
          "allOf": [
            {
              "$ref": "#/definitions/WSHPEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "VRFEquipmentType": {
      "title": "VRFEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "VRF"
      ],
      "type": "string"
    },
    "VRF": {
      "title": "VRF",
      "description": "Variable Refrigerant Flow (VRF) heating/cooling system (with no ventilation).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "VRF",
          "pattern": "^VRF$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the VRFEquipmentType enumeration.",
          "default": "VRF",
          "allOf": [
            {
              "$ref": "#/definitions/VRFEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "BaseboardEquipmentType": {
      "title": "BaseboardEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "ElectricBaseboard",
        "BoilerBaseboard",
        "ASHPBaseboard",
        "DHWBaseboard"
      ],
      "type": "string"
    },
    "Baseboard": {
      "title": "Baseboard",
      "description": "Baseboard heating system. Intended for spaces only requiring heating.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "Baseboard",
          "pattern": "^Baseboard$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the BaseboardEquipmentType enumeration.",
          "default": "ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/BaseboardEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "EvaporativeCoolerEquipmentType": {
      "title": "EvaporativeCoolerEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "EvapCoolers_ElectricBaseboard",
        "EvapCoolers_BoilerBaseboard",
        "EvapCoolers_ASHPBaseboard",
        "EvapCoolers_DHWBaseboard",
        "EvapCoolers_Furnace",
        "EvapCoolers_UnitHeaters",
        "EvapCoolers"
      ],
      "type": "string"
    },
    "EvaporativeCooler": {
      "title": "EvaporativeCooler",
      "description": "Direct evaporative cooling systems (with optional heating).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "EvaporativeCooler",
          "pattern": "^EvaporativeCooler$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the EvaporativeCoolerEquipmentType enumeration.",
          "default": "EvapCoolers_ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/EvaporativeCoolerEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "ResidentialEquipmentType": {
      "title": "ResidentialEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "ResidentialAC_ElectricBaseboard",
        "ResidentialAC_BoilerBaseboard",
        "ResidentialAC_ASHPBaseboard",
        "ResidentialAC_DHWBaseboard",
        "ResidentialAC_ResidentialFurnace",
        "ResidentialAC",
        "ResidentialHP",
        "ResidentialHPNoCool",
        "ResidentialFurnace"
      ],
      "type": "string"
    },
    "Residential": {
      "title": "Residential",
      "description": "Residential Air Conditioning, Heat Pump or Furnace system.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "Residential",
          "pattern": "^Residential$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the ResidentialEquipmentType enumeration.",
          "default": "ResidentialAC_ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/ResidentialEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WindowACEquipmentType": {
      "title": "WindowACEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "WindowAC_ElectricBaseboard",
        "WindowAC_BoilerBaseboard",
        "WindowAC_ASHPBaseboard",
        "WindowAC_DHWBaseboard",
        "WindowAC_Furnace",
        "WindowAC_GasHeaters",
        "WindowAC"
      ],
      "type": "string"
    },
    "WindowAC": {
      "title": "WindowAC",
      "description": "Window Air Conditioning cooling system (with optional heating).",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "WindowAC",
          "pattern": "^WindowAC$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the WindowACEquipmentType enumeration.",
          "default": "WindowAC_ElectricBaseboard",
          "allOf": [
            {
              "$ref": "#/definitions/WindowACEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "GasUnitHeaterEquipmentType": {
      "title": "GasUnitHeaterEquipmentType",
      "description": "An enumeration.",
      "enum": [
        "GasHeaters"
      ],
      "type": "string"
    },
    "GasUnitHeater": {
      "title": "GasUnitHeater",
      "description": "Gas unit heating system. Intended for spaces only requiring heating.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "vintage": {
          "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
          "default": "ASHRAE_2013",
          "allOf": [
            {
              "$ref": "#/definitions/Vintages"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "GasUnitHeater",
          "pattern": "^GasUnitHeater$",
          "type": "string"
        },
        "equipment_type": {
          "description": "Text for the specific type of system equipment from the GasUnitHeaterEquipmentType enumeration.",
          "default": "GasHeaters",
          "allOf": [
            {
              "$ref": "#/definitions/GasUnitHeaterEquipmentType"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "ProgramTypeAbridged": {
      "title": "ProgramTypeAbridged",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ProgramTypeAbridged",
          "pattern": "^ProgramTypeAbridged$",
          "type": "string"
        },
        "people": {
          "title": "People",
          "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/PeopleAbridged"
            }
          ]
        },
        "lighting": {
          "title": "Lighting",
          "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/LightingAbridged"
            }
          ]
        },
        "electric_equipment": {
          "title": "Electric Equipment",
          "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/ElectricEquipmentAbridged"
            }
          ]
        },
        "gas_equipment": {
          "title": "Gas Equipment",
          "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/GasEquipmentAbridged"
            }
          ]
        },
        "service_hot_water": {
          "title": "Service Hot Water",
          "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/ServiceHotWaterAbridged"
            }
          ]
        },
        "infiltration": {
          "title": "Infiltration",
          "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/InfiltrationAbridged"
            }
          ]
        },
        "ventilation": {
          "title": "Ventilation",
          "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationAbridged"
            }
          ]
        },
        "setpoint": {
          "title": "Setpoint",
          "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
          "allOf": [
            {
              "$ref": "#/definitions/SetpointAbridged"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "People": {
      "title": "People",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "People",
          "pattern": "^People$",
          "type": "string"
        },
        "people_per_area": {
          "title": "People Per Area",
          "description": "People per floor area expressed as [people/m2]",
          "minimum": 0,
          "type": "number"
        },
        "occupancy_schedule": {
          "title": "Occupancy Schedule",
          "description": "A schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "activity_schedule": {
          "title": "Activity Schedule",
          "description": "A schedule for the activity of the occupants over the course of the year. The type of this schedule should be Power and the values of the schedule equal to the number of Watts given off by an individual person in the room.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "The radiant fraction of sensible heat released by people. The defaultvalue is 0.30.",
          "default": 0.3,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
          "default": {
            "type": "Autocalculate"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Autocalculate"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          ]
        }
      },
      "required": [
        "identifier",
        "people_per_area",
        "occupancy_schedule",
        "activity_schedule"
      ],
      "additionalProperties": false
    },
    "Lighting": {
      "title": "Lighting",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "Lighting",
          "pattern": "^Lighting$",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Lighting per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "The schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "visible_fraction": {
          "title": "Visible Fraction",
          "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. The default value is `0.25`.",
          "default": 0.25,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "The fraction of heat from lights that is long-wave radiation. Default value is `0.32`.",
          "default": 0.32,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "return_air_fraction": {
          "title": "Return Air Fraction",
          "description": "The fraction of the heat from lights that goes into the zone return air. Default value is `0`.",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "baseline_watts_per_area": {
          "title": "Baseline Watts Per Area",
          "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
          "default": 11.84029,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "ElectricEquipment": {
      "title": "ElectricEquipment",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Equipment level per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "lost_fraction": {
          "title": "Lost Fraction",
          "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "type": {
          "title": "Type",
          "default": "ElectricEquipment",
          "pattern": "^ElectricEquipment$",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "GasEquipment": {
      "title": "GasEquipment",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "watts_per_area": {
          "title": "Watts Per Area",
          "description": "Equipment level per floor area as [W/m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "radiant_fraction": {
          "title": "Radiant Fraction",
          "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "lost_fraction": {
          "title": "Lost Fraction",
          "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "type": {
          "title": "Type",
          "default": "GasEquipment",
          "pattern": "^GasEquipment$",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "watts_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "ServiceHotWater": {
      "title": "ServiceHotWater",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ServiceHotWater",
          "pattern": "^ServiceHotWater$",
          "type": "string"
        },
        "flow_per_area": {
          "title": "Flow Per Area",
          "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "The schedule for the use of hot water over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "target_temperature": {
          "title": "Target Temperature",
          "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
          "default": 60,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "sensible_fraction": {
          "title": "Sensible Fraction",
          "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
          "default": 0.2,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "latent_fraction": {
          "title": "Latent Fraction",
          "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
          "default": 0.05,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "flow_per_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "Infiltration": {
      "title": "Infiltration",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "Infiltration",
          "pattern": "^Infiltration$",
          "type": "string"
        },
        "flow_per_exterior_area": {
          "title": "Flow Per Exterior Area",
          "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "The schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "constant_coefficient": {
          "title": "Constant Coefficient",
          "default": 1,
          "minimum": 0,
          "type": "number"
        },
        "temperature_coefficient": {
          "title": "Temperature Coefficient",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "velocity_coefficient": {
          "title": "Velocity Coefficient",
          "default": 0,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier",
        "flow_per_exterior_area",
        "schedule"
      ],
      "additionalProperties": false
    },
    "Ventilation": {
      "title": "Ventilation",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "Ventilation",
          "pattern": "^Ventilation$",
          "type": "string"
        },
        "flow_per_person": {
          "title": "Flow Per Person",
          "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "flow_per_area": {
          "title": "Flow Per Area",
          "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "air_changes_per_hour": {
          "title": "Air Changes Per Hour",
          "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "flow_per_zone": {
          "title": "Flow Per Zone",
          "description": "Intensity of ventilation in m3/s for the entire Room.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "schedule": {
          "title": "Schedule",
          "description": "Schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Setpoint": {
      "title": "Setpoint",
      "description": "Used to specify information about the setpoint schedule.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "Setpoint",
          "pattern": "^Setpoint$",
          "type": "string"
        },
        "cooling_schedule": {
          "title": "Cooling Schedule",
          "description": "Schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "heating_schedule": {
          "title": "Heating Schedule",
          "description": "Schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "humidifying_schedule": {
          "title": "Humidifying Schedule",
          "description": "Schedule for the humidification setpoint. The values in this schedule should be in [%].",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        },
        "dehumidifying_schedule": {
          "title": "Dehumidifying Schedule",
          "description": "Schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
          "anyOf": [
            {
              "$ref": "#/definitions/ScheduleRuleset"
            },
            {
              "$ref": "#/definitions/ScheduleFixedInterval"
            }
          ]
        }
      },
      "required": [
        "identifier",
        "cooling_schedule",
        "heating_schedule"
      ],
      "additionalProperties": false
    },
    "ProgramType": {
      "title": "ProgramType",
      "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ProgramType",
          "pattern": "^ProgramType$",
          "type": "string"
        },
        "people": {
          "title": "People",
          "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/People"
            }
          ]
        },
        "lighting": {
          "title": "Lighting",
          "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/Lighting"
            }
          ]
        },
        "electric_equipment": {
          "title": "Electric Equipment",
          "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/ElectricEquipment"
            }
          ]
        },
        "gas_equipment": {
          "title": "Gas Equipment",
          "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/GasEquipment"
            }
          ]
        },
        "service_hot_water": {
          "title": "Service Hot Water",
          "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/ServiceHotWater"
            }
          ]
        },
        "infiltration": {
          "title": "Infiltration",
          "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
          "allOf": [
            {
              "$ref": "#/definitions/Infiltration"
            }
          ]
        },
        "ventilation": {
          "title": "Ventilation",
          "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
          "allOf": [
            {
              "$ref": "#/definitions/Ventilation"
            }
          ]
        },
        "setpoint": {
          "title": "Setpoint",
          "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
          "allOf": [
            {
              "$ref": "#/definitions/Setpoint"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "ScheduleRulesetAbridged": {
      "title": "ScheduleRulesetAbridged",
      "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleRulesetAbridged",
          "pattern": "^ScheduleRulesetAbridged$",
          "type": "string"
        },
        "day_schedules": {
          "title": "Day Schedules",
          "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleDay"
          }
        },
        "default_day_schedule": {
          "title": "Default Day Schedule",
          "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "schedule_rules": {
          "title": "Schedule Rules",
          "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleRuleAbridged"
          }
        },
        "holiday_schedule": {
          "title": "Holiday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "summer_designday_schedule": {
          "title": "Summer Designday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "winter_designday_schedule": {
          "title": "Winter Designday Schedule",
          "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "schedule_type_limit": {
          "title": "Schedule Type Limit",
          "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "day_schedules",
        "default_day_schedule"
      ],
      "additionalProperties": false
    },
    "ScheduleFixedIntervalAbridged": {
      "title": "ScheduleFixedIntervalAbridged",
      "description": "Used to specify a start date and a list of values for a period of analysis.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ScheduleFixedIntervalAbridged",
          "pattern": "^ScheduleFixedIntervalAbridged$",
          "type": "string"
        },
        "values": {
          "title": "Values",
          "description": "A list of timeseries values occuring at each timestep over the course of the simulation.",
          "minItems": 24,
          "maxItems": 527040,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "schedule_type_limit": {
          "title": "Schedule Type Limit",
          "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "timestep": {
          "title": "Timestep",
          "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
          "default": 1,
          "type": "integer"
        },
        "start_date": {
          "title": "Start Date",
          "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
          "default": [
            1,
            1
          ],
          "minItems": 2,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "placeholder_value": {
          "title": "Placeholder Value",
          "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
          "default": 0,
          "type": "number"
        },
        "interpolate": {
          "title": "Interpolate",
          "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "identifier",
        "values"
      ],
      "additionalProperties": false
    },
    "VentilationControlType": {
      "title": "VentilationControlType",
      "description": "An enumeration.",
      "enum": [
        "SingleZone",
        "MultiZoneWithDistribution",
        "MultiZoneWithoutDistribution"
      ],
      "type": "string"
    },
    "BuildingType": {
      "title": "BuildingType",
      "description": "An enumeration.",
      "enum": [
        "LowRise",
        "HighRise"
      ],
      "type": "string"
    },
    "VentilationSimulationControl": {
      "title": "VentilationSimulationControl",
      "description": "The global parameters used in the ventilation simulation.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "VentilationSimulationControl",
          "pattern": "^VentilationSimulationControl$",
          "type": "string"
        },
        "vent_control_type": {
          "description": "Text indicating type of ventilation control. Choices are: SingleZone, MultiZoneWithDistribution, MultiZoneWithoutDistribution. The MultiZone options will model air flow with the AirflowNetwork model, which is generally more accurate then the SingleZone option, but will take considerably longer to simulate, and requires defining more ventilation parameters to explicitly account for weather and building-induced pressure differences, and the leakage geometry corresponding to specific windows, doors, and surface cracks.",
          "default": "SingleZone",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationControlType"
            }
          ]
        },
        "reference_temperature": {
          "title": "Reference Temperature",
          "description": "Reference temperature measurement in Celsius under which the surface crack data were obtained.",
          "default": 20,
          "minimum": -273.15,
          "type": "number"
        },
        "reference_pressure": {
          "title": "Reference Pressure",
          "description": "Reference barometric pressure measurement in Pascals under which the surface crack data were obtained.",
          "default": 101325,
          "minimum": 31000,
          "maximum": 120000,
          "type": "number"
        },
        "reference_humidity_ratio": {
          "title": "Reference Humidity Ratio",
          "description": "Reference humidity ratio measurement in kgWater/kgDryAir under which the surface crack data were obtained.",
          "default": 0,
          "minimum": 0,
          "type": "number"
        },
        "building_type": {
          "description": "Text indicating relationship between building footprint and height used to calculate the wind pressure coefficients for exterior surfaces.Choices are: LowRise and HighRise. LowRise corresponds to rectangular building whose height is less then three times the width and length of the footprint. HighRise corresponds to a rectangular building whose height is more than three times the width and length of the footprint. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
          "default": "LowRise",
          "allOf": [
            {
              "$ref": "#/definitions/BuildingType"
            }
          ]
        },
        "long_axis_angle": {
          "title": "Long Axis Angle",
          "description": "The clockwise rotation in degrees from true North of the long axis of the building. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
          "default": 0,
          "minimum": 0,
          "maximum": 180,
          "type": "number"
        },
        "aspect_ratio": {
          "title": "Aspect Ratio",
          "description": "Aspect ratio of a rectangular footprint, defined as the ratio of length of the short axis divided by the length of the long axis. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
          "default": 1,
          "exclusiveMinimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "ModelEnergyProperties": {
      "title": "ModelEnergyProperties",
      "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ModelEnergyProperties",
          "pattern": "^ModelEnergyProperties$",
          "type": "string"
        },
        "construction_sets": {
          "title": "Construction Sets",
          "description": "List of all unique ConstructionSets in the Model.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ConstructionSetAbridged"
              },
              {
                "$ref": "#/definitions/ConstructionSet"
              }
            ]
          }
        },
        "constructions": {
          "title": "Constructions",
          "description": "A list of all unique constructions in the model. This includes constructions across all Faces, Apertures, Doors, Shades, Room ConstructionSets, and the global_construction_set.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpaqueConstructionAbridged"
              },
              {
                "$ref": "#/definitions/WindowConstructionAbridged"
              },
              {
                "$ref": "#/definitions/WindowConstructionShadeAbridged"
              },
              {
                "$ref": "#/definitions/AirBoundaryConstructionAbridged"
              },
              {
                "$ref": "#/definitions/OpaqueConstruction"
              },
              {
                "$ref": "#/definitions/WindowConstruction"
              },
              {
                "$ref": "#/definitions/WindowConstructionShade"
              },
              {
                "$ref": "#/definitions/AirBoundaryConstruction"
              },
              {
                "$ref": "#/definitions/ShadeConstruction"
              }
            ]
          }
        },
        "materials": {
          "title": "Materials",
          "description": "A list of all unique materials in the model. This includes materials needed to make the Model constructions.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/EnergyMaterial"
              },
              {
                "$ref": "#/definitions/EnergyMaterialNoMass"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGas"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGasCustom"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGasMixture"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialSimpleGlazSys"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialBlind"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialGlazing"
              },
              {
                "$ref": "#/definitions/EnergyWindowMaterialShade"
              }
            ]
          }
        },
        "hvacs": {
          "title": "Hvacs",
          "description": "List of all unique HVAC systems in the Model.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdealAirSystemAbridged"
              },
              {
                "$ref": "#/definitions/VAV"
              },
              {
                "$ref": "#/definitions/PVAV"
              },
              {
                "$ref": "#/definitions/PSZ"
              },
              {
                "$ref": "#/definitions/PTAC"
              },
              {
                "$ref": "#/definitions/ForcedAirFurnace"
              },
              {
                "$ref": "#/definitions/FCUwithDOAS"
              },
              {
                "$ref": "#/definitions/WSHPwithDOAS"
              },
              {
                "$ref": "#/definitions/VRFwithDOAS"
              },
              {
                "$ref": "#/definitions/FCU"
              },
              {
                "$ref": "#/definitions/WSHP"
              },
              {
                "$ref": "#/definitions/VRF"
              },
              {
                "$ref": "#/definitions/Baseboard"
              },
              {
                "$ref": "#/definitions/EvaporativeCooler"
              },
              {
                "$ref": "#/definitions/Residential"
              },
              {
                "$ref": "#/definitions/WindowAC"
              },
              {
                "$ref": "#/definitions/GasUnitHeater"
              }
            ]
          }
        },
        "program_types": {
          "title": "Program Types",
          "description": "List of all unique ProgramTypes in the Model.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ProgramTypeAbridged"
              },
              {
                "$ref": "#/definitions/ProgramType"
              }
            ]
          }
        },
        "schedules": {
          "title": "Schedules",
          "description": "A list of all unique schedules in the model. This includes schedules across all HVAC systems, ProgramTypes, Rooms, and Shades.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ScheduleRulesetAbridged"
              },
              {
                "$ref": "#/definitions/ScheduleFixedIntervalAbridged"
              },
              {
                "$ref": "#/definitions/ScheduleRuleset"
              },
              {
                "$ref": "#/definitions/ScheduleFixedInterval"
              }
            ]
          }
        },
        "schedule_type_limits": {
          "title": "Schedule Type Limits",
          "description": "A list of all unique ScheduleTypeLimits in the model. This all ScheduleTypeLimits needed to make the Model schedules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleTypeLimit"
          }
        },
        "ventilation_simulation_control": {
          "title": "Ventilation Simulation Control",
          "description": "An optional parameter to define the global parameters for a ventilation cooling.",
          "allOf": [
            {
              "$ref": "#/definitions/VentilationSimulationControl"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Void": {
      "title": "Void",
      "description": "Void modifier",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "void",
          "pattern": "^void$",
          "type": "string"
        }
      }
    },
    "Mirror": {
      "title": "Mirror",
      "description": "Radiance mirror material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "mirror",
          "pattern": "^mirror$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_reflectance": {
          "title": "R Reflectance",
          "description": "A value between 0 and 1 for the red channel reflectance (default: 1).",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_reflectance": {
          "title": "G Reflectance",
          "description": "A value between 0 and 1 for the green channel reflectance (default: 1).",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_reflectance": {
          "title": "B Reflectance",
          "description": "A value between 0 and 1 for the blue channel reflectance (default: 1).",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "alternate_material": {
          "title": "Alternate Material",
          "description": "An optional material that may be used like the illum type to specify a different material to be used for shading non-source rays. If None, this will keep the alternat_material as mirror. If this alternate material is given as Void, then the mirror surface will be invisible. Using Void is only appropriate if the surface hides other (more detailed) geometry with the same overall reflectance (default: None).",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Metal": {
      "title": "Metal",
      "description": "Radiance metal material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "metal",
          "pattern": "^metal$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_reflectance": {
          "title": "R Reflectance",
          "description": "A value between 0 and 1 for the red channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_reflectance": {
          "title": "G Reflectance",
          "description": "A value between 0 and 1 for the green channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_reflectance": {
          "title": "B Reflectance",
          "description": "A value between 0 and 1 for the blue channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "specularity": {
          "title": "Specularity",
          "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions lower than 0.9 are not realistic for metallic materials. (default: 0.9).",
          "default": 0.9,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "roughness": {
          "title": "Roughness",
          "description": "A value between 0 and 1 for the roughness, specified as the rms slope of surface facets. Roughness greater than 0.2 are not realistic (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Trans": {
      "title": "Trans",
      "description": "Radiance Translucent material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "trans",
          "pattern": "^trans$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_reflectance": {
          "title": "R Reflectance",
          "description": "A value between 0 and 1 for the red channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_reflectance": {
          "title": "G Reflectance",
          "description": "A value between 0 and 1 for the green channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_reflectance": {
          "title": "B Reflectance",
          "description": "A value between 0 and 1 for the blue channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "specularity": {
          "title": "Specularity",
          "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions greater than 0.1 are not realistic for non-metallic materials. (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "roughness": {
          "title": "Roughness",
          "description": "A value between 0 and 1 for the roughness, specified as the rms slope of surface facets. Roughness greater than 0.2 are not realistic (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "transmitted_diff": {
          "title": "Transmitted Diff",
          "description": "The fraction of transmitted light that is transmitted diffusely in a scattering fashion (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "transmitted_spec": {
          "title": "Transmitted Spec",
          "description": "The fraction of transmitted light that is not diffusely scattered (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Light": {
      "title": "Light",
      "description": "Radiance Light material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "light",
          "pattern": "^light$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_emittance": {
          "title": "R Emittance",
          "description": "A value between 0 and 1 for the red channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_emittance": {
          "title": "G Emittance",
          "description": "A value between 0 and 1 for the green channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_emittance": {
          "title": "B Emittance",
          "description": "A value between 0 and 1 for the blue channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Glow": {
      "title": "Glow",
      "description": "Radiance Glow material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "glow",
          "pattern": "^glow$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_emittance": {
          "title": "R Emittance",
          "description": "A value between 0 and 1 for the red channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_emittance": {
          "title": "G Emittance",
          "description": "A value between 0 and 1 for the green channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_emittance": {
          "title": "B Emittance",
          "description": "A value between 0 and 1 for the blue channel of the modifier (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "max_radius": {
          "title": "Max Radius",
          "description": "Maximum radius for shadow testing (default: 0). Surfaces with zero will never be tested for zero, although it may participate in interreflection calculation. Negative values will never contribute to scene illumination.",
          "default": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "BSDF": {
      "title": "BSDF",
      "description": "Radiance BSDF (Bidirectional Scattering Distribution Function) material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "BSDF",
          "pattern": "^BSDF$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "up_orientation": {
          "title": "Up Orientation",
          "description": "Vector as sequence that sets the hemisphere that the BSDF material faces. (default: (0.01, 0.01, 1.00).",
          "default": [
            0.01,
            0.01,
            1.0
          ],
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "thickness": {
          "title": "Thickness",
          "description": "Optional number to set the thickness of the BSDF material Sign of thickness indicates whether proxied geometry is behind the BSDF surface (when thickness is positive) or in front (when thickness is negative)(default: 0).",
          "default": 0,
          "type": "number"
        },
        "function_file": {
          "title": "Function File",
          "description": "Optional input for function file (default: \".\").",
          "default": ".",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "transform": {
          "title": "Transform",
          "description": "Optional transform input to scale the thickness and reorient the up vector (default: None).",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "bsdf_data": {
          "title": "Bsdf Data",
          "description": "A string with the contents of the BSDF XML file.",
          "type": "string"
        },
        "front_diffuse_reflectance": {
          "title": "Front Diffuse Reflectance",
          "description": "Optional additional front diffuse reflectance as sequence of numbers (default: None).",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "back_diffuse_reflectance": {
          "title": "Back Diffuse Reflectance",
          "description": "Optional additional back diffuse reflectance as sequence of numbers (default: None).",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "diffuse_transmittance": {
          "title": "Diffuse Transmittance",
          "description": "Optional additional diffuse transmittance as sequence of numbers (default: None).",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "identifier",
        "bsdf_data"
      ],
      "additionalProperties": false
    },
    "Glass": {
      "title": "Glass",
      "description": "Radiance glass material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "glass",
          "pattern": "^glass$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_transmissivity": {
          "title": "R Transmissivity",
          "description": "A value between 0 and 1 for the red channel transmissivity (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_transmissivity": {
          "title": "G Transmissivity",
          "description": "A value between 0 and 1 for the green channel transmissivity (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_transmissivity": {
          "title": "B Transmissivity",
          "description": "A value between 0 and 1 for the blue channel transmissivity (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "refraction_index": {
          "title": "Refraction Index",
          "description": "A value between 0 and 1 for the index of refraction (default: 1.52).",
          "default": 1.52,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Plastic": {
      "title": "Plastic",
      "description": "Radiance plastic material.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "plastic",
          "pattern": "^plastic$",
          "type": "string"
        },
        "modifier": {
          "title": "Modifier",
          "description": "Material modifier (default: Void).",
          "default": {
            "type": "void"
          },
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers (default: None).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "r_reflectance": {
          "title": "R Reflectance",
          "description": "A value between 0 and 1 for the red channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "g_reflectance": {
          "title": "G Reflectance",
          "description": "A value between 0 and 1 for the green channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "b_reflectance": {
          "title": "B Reflectance",
          "description": "A value between 0 and 1 for the blue channel reflectance (default: 0).",
          "default": 0.0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "specularity": {
          "title": "Specularity",
          "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions greater than 0.1 are not realistic for non-metallic materials. (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "roughness": {
          "title": "Roughness",
          "description": "A value between 0 and 1 for the roughness, specified as the rms slope of surface facets. Roughness greater than 0.2 are not realistic (default: 0).",
          "default": 0,
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WallModifierSet": {
      "title": "WallModifierSet",
      "description": "Set containing radiance modifiers needed for a model's Walls.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "WallModifierSet",
          "pattern": "^WallModifierSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FloorModifierSet": {
      "title": "FloorModifierSet",
      "description": "Set containing radiance modifiers needed for a model's Floors.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "FloorModifierSet",
          "pattern": "^FloorModifierSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoofCeilingModifierSet": {
      "title": "RoofCeilingModifierSet",
      "description": "Set containing radiance modifiers needed for a model's roofs.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "RoofCeilingModifierSet",
          "pattern": "^RoofCeilingModifierSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApertureModifierSet": {
      "title": "ApertureModifierSet",
      "description": "Set containing radiance modifiers needed for a model's Apertures.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ApertureModifierSet",
          "pattern": "^ApertureModifierSet$",
          "type": "string"
        },
        "window_modifier": {
          "title": "Window Modifier",
          "description": "A modifier object for apertures with an Outdoors boundary condition, False is_operable property, and Wall parent Face.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A modifier object for apertures with a Surface boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "skylight_modifier": {
          "title": "Skylight Modifier",
          "description": "A modifier object for apertures with an Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "operable_modifier": {
          "title": "Operable Modifier",
          "description": "A modifier object for apertures with an Outdoors boundary condition and a True is_operable property.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "DoorModifierSet": {
      "title": "DoorModifierSet",
      "description": "Set containing radiance modifiers needed for a model's Doors.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "DoorModifierSet",
          "pattern": "^DoorModifierSet$",
          "type": "string"
        },
        "interior_glass_modifier": {
          "title": "Interior Glass Modifier",
          "description": "A modifier object for glass with a Surface boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "exterior_glass_modifier": {
          "title": "Exterior Glass Modifier",
          "description": "A modifier object for glass with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "overhead_modifier": {
          "title": "Overhead Modifier",
          "description": "A window modifier object for doors with an Outdoors boundary condition and a RoofCeiling or Floor face type for their parent face.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ShadeModifierSet": {
      "title": "ShadeModifierSet",
      "description": "Set containing radiance modifiers needed for a model's Shade.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        },
        "type": {
          "title": "Type",
          "default": "ShadeModifierSet",
          "pattern": "^ShadeModifierSet$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifierSet": {
      "title": "ModifierSet",
      "description": "Set containing all radiance modifiers needed to create a radiance model.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ModifierSet",
          "pattern": "^ModifierSet$",
          "type": "string"
        },
        "wall_set": {
          "title": "Wall Set",
          "description": "An optional WallModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/WallModifierSet"
            }
          ]
        },
        "floor_set": {
          "title": "Floor Set",
          "description": "An optional FloorModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/FloorModifierSet"
            }
          ]
        },
        "roof_ceiling_set": {
          "title": "Roof Ceiling Set",
          "description": "An optional RoofCeilingModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/RoofCeilingModifierSet"
            }
          ]
        },
        "aperture_set": {
          "title": "Aperture Set",
          "description": "An optional ApertureModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/ApertureModifierSet"
            }
          ]
        },
        "door_set": {
          "title": "Door Set",
          "description": "An optional DoorModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/DoorModifierSet"
            }
          ]
        },
        "shade_set": {
          "title": "Shade Set",
          "description": "An optional ShadeModifierSet object for this ModifierSet. (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/ShadeModifierSet"
            }
          ]
        },
        "air_boundary_modifier": {
          "title": "Air Boundary Modifier",
          "description": "An optional Modifier to be used for all Faces with an AirBoundary face type. If None, it will be the honeybee generic air wall modifier.",
          "anyOf": [
            {
              "$ref": "#/definitions/Plastic"
            },
            {
              "$ref": "#/definitions/Glass"
            },
            {
              "$ref": "#/definitions/BSDF"
            },
            {
              "$ref": "#/definitions/Glow"
            },
            {
              "$ref": "#/definitions/Light"
            },
            {
              "$ref": "#/definitions/Trans"
            },
            {
              "$ref": "#/definitions/Metal"
            },
            {
              "$ref": "#/definitions/Void"
            },
            {
              "$ref": "#/definitions/Mirror"
            }
          ]
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "WallModifierSetAbridged": {
      "title": "WallModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Walls.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "WallModifierSetAbridged",
          "pattern": "^WallModifierSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FloorModifierSetAbridged": {
      "title": "FloorModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Floors.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "FloorModifierSetAbridged",
          "pattern": "^FloorModifierSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RoofCeilingModifierSetAbridged": {
      "title": "RoofCeilingModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Roofs.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "RoofCeilingModifierSetAbridged",
          "pattern": "^RoofCeilingModifierSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApertureModifierSetAbridged": {
      "title": "ApertureModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Apertures.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ApertureModifierSetAbridged",
          "pattern": "^ApertureModifierSetAbridged$",
          "type": "string"
        },
        "window_modifier": {
          "title": "Window Modifier",
          "description": "Identifier of modifier object for apertures with an Outdoors boundary condition, False is_operable property, and Wall parent Face.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier of modifier object for apertures with a Surface boundary condition.",
          "type": "string"
        },
        "skylight_modifier": {
          "title": "Skylight Modifier",
          "description": "Identifier of modifier object for apertures with an Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
          "type": "string"
        },
        "operable_modifier": {
          "title": "Operable Modifier",
          "description": "Identifier of modifier object for apertures with an Outdoors boundary condition and a True is_operable property.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DoorModifierSetAbridged": {
      "title": "DoorModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Doors.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "DoorModifierSetAbridged",
          "pattern": "^DoorModifierSetAbridged$",
          "type": "string"
        },
        "interior_glass_modifier": {
          "title": "Interior Glass Modifier",
          "description": "Identifier of modifier object for glass with a Surface boundary condition.",
          "type": "string"
        },
        "exterior_glass_modifier": {
          "title": "Exterior Glass Modifier",
          "description": "Identifier of modifier object for glass with an Outdoors boundary condition.",
          "type": "string"
        },
        "overhead_modifier": {
          "title": "Overhead Modifier",
          "description": "Identifier of a modifier object for doors with an Outdoors boundary condition and a RoofCeiling or Floor face type for their parent face.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ShadeModifierSetAbridged": {
      "title": "ShadeModifierSetAbridged",
      "description": "Abridged set containing radiance modifiers needed for a model's Shade.",
      "type": "object",
      "properties": {
        "exterior_modifier": {
          "title": "Exterior Modifier",
          "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
          "type": "string"
        },
        "interior_modifier": {
          "title": "Interior Modifier",
          "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ShadeModifierSetAbridged",
          "pattern": "^ShadeModifierSetAbridged$",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifierSetAbridged": {
      "title": "ModifierSetAbridged",
      "description": "Abridged set containing all modifiers needed to create a radiance model.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "default": "ModifierSetAbridged",
          "pattern": "^ModifierSetAbridged$",
          "type": "string"
        },
        "wall_set": {
          "title": "Wall Set",
          "description": "Optional WallModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/WallModifierSetAbridged"
            }
          ]
        },
        "floor_set": {
          "title": "Floor Set",
          "description": "Optional FloorModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/FloorModifierSetAbridged"
            }
          ]
        },
        "roof_ceiling_set": {
          "title": "Roof Ceiling Set",
          "description": "Optional RoofCeilingModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/RoofCeilingModifierSetAbridged"
            }
          ]
        },
        "aperture_set": {
          "title": "Aperture Set",
          "description": "Optional ApertureModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/ApertureModifierSetAbridged"
            }
          ]
        },
        "door_set": {
          "title": "Door Set",
          "description": "Optional DoorModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/DoorModifierSetAbridged"
            }
          ]
        },
        "shade_set": {
          "title": "Shade Set",
          "description": "Optional ShadeModifierSet object for this ModifierSet (default: None).",
          "allOf": [
            {
              "$ref": "#/definitions/ShadeModifierSetAbridged"
            }
          ]
        },
        "air_boundary_modifier": {
          "title": "Air Boundary Modifier",
          "description": "Optional Modifier to be used for all Faces with an AirBoundary face type. If None, it will be the honeybee generic air wall modifier.",
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Sensor": {
      "title": "Sensor",
      "description": "A single Radiance of sensors.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Sensor",
          "pattern": "^Sensor$",
          "type": "string"
        },
        "pos": {
          "title": "Pos",
          "description": "Position of sensor in space as an array of (x, y, z) values.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "dir": {
          "title": "Dir",
          "description": "Direction of sensor as an array of (x, y, z) values.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "pos",
        "dir"
      ],
      "additionalProperties": false
    },
    "Color": {
      "title": "Color",
      "description": "A mesh in 3D space.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Color",
          "pattern": "^Color$",
          "type": "string"
        },
        "r": {
          "title": "R",
          "description": "Integer for red value.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "g": {
          "title": "G",
          "description": "Integer for green value.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "b": {
          "title": "B",
          "description": "Integer for blue value.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        }
      },
      "required": [
        "r",
        "g",
        "b"
      ],
      "additionalProperties": false
    },
    "Mesh3D": {
      "title": "Mesh3D",
      "description": "A mesh in 3D space.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "Mesh3D",
          "pattern": "^Mesh3D$",
          "type": "string"
        },
        "vertices": {
          "title": "Vertices",
          "description": "A list of points representing the vertices of the mesh. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
          "minItems": 3,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 3,
            "maxItems": 3
          }
        },
        "faces": {
          "title": "Faces",
          "description": "A list of lists with each sub-list having either 3 or 4 integers. These integers correspond to indices within the list of vertices.",
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 3,
            "maxItems": 4
          }
        },
        "colors": {
          "title": "Colors",
          "description": "An optional list of colors that correspond to either the faces of the mesh or the vertices of the mesh.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Color"
          }
        }
      },
      "required": [
        "vertices",
        "faces"
      ],
      "additionalProperties": false
    },
    "SensorGrid": {
      "title": "SensorGrid",
      "description": "A grid of sensors.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "room_identifier": {
          "title": "Room Identifier",
          "description": "Optional text string for the Room identifier to which this object belongs. This will be used to narrow down the number of aperture groups that have to be run with this sensor grid. If None, the grid will be run with all aperture groups in the model.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "light_path": {
          "title": "Light Path",
          "description": "Get or set a list of lists for the light path from the object to the sky. Each sub-list contains identifiers of aperture groups through which light passes. (eg. [[\"SouthWindow1\"], [\"static_apertures\", \"NorthWindow2\"]]).Setting this property will override any auto-calculation of the light path from the model and room_identifier upon export to the simulation.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": {
          "title": "Type",
          "default": "SensorGrid",
          "pattern": "^SensorGrid$",
          "type": "string"
        },
        "sensors": {
          "title": "Sensors",
          "description": "A list of sensors that belong to the grid.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sensor"
          }
        },
        "mesh": {
          "title": "Mesh",
          "description": "An optional Mesh3D that aligns with the sensors and can be used for visualization of the grid. Note that the number of sensors in the grid must match the number of faces or the number vertices within the Mesh3D.",
          "allOf": [
            {
              "$ref": "#/definitions/Mesh3D"
            }
          ]
        },
        "base_geometry": {
          "title": "Base Geometry",
          "description": "An optional array of Face3D used to represent the grid. There are no restrictions on how this property relates to the sensors and it is provided only to assist with the display of the grid when the number of sensors or the mesh is too large to be practically visualized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Face3D"
          }
        },
        "group_identifier": {
          "title": "Group Identifier",
          "description": "An optional string to note the sensor grid group '             'to which the sensor is a part of. Grids sharing the same '             'group_identifier will be written to the same subfolder in Radiance '             'folder (default: None).",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "sensors"
      ],
      "additionalProperties": false
    },
    "ViewType": {
      "title": "ViewType",
      "description": "A single character for the view type (-vt).",
      "enum": [
        "v",
        "h",
        "l",
        "c",
        "a",
        "s"
      ],
      "type": "string"
    },
    "View": {
      "title": "View",
      "description": "A single Radiance of sensors.",
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
          "type": "string"
        },
        "display_name": {
          "title": "Display Name",
          "description": "Display name of the object with no character restrictions.",
          "type": "string"
        },
        "room_identifier": {
          "title": "Room Identifier",
          "description": "Optional text string for the Room identifier to which this object belongs. This will be used to narrow down the number of aperture groups that have to be run with this sensor grid. If None, the grid will be run with all aperture groups in the model.",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "[A-Za-z0-9_-]",
          "type": "string"
        },
        "light_path": {
          "title": "Light Path",
          "description": "Get or set a list of lists for the light path from the object to the sky. Each sub-list contains identifiers of aperture groups through which light passes. (eg. [[\"SouthWindow1\"], [\"static_apertures\", \"NorthWindow2\"]]).Setting this property will override any auto-calculation of the light path from the model and room_identifier upon export to the simulation.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": {
          "title": "Type",
          "default": "View",
          "pattern": "^View$",
          "type": "string"
        },
        "position": {
          "title": "Position",
          "description": "The view position (-vp) as an array of (x, y, z) values.This is the focal point of a perspective view or the center of a parallel projection.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "direction": {
          "title": "Direction",
          "description": "The view direction (-vd) as an array of (x, y, z) values.The length of this vector indicates the focal distance as needed by the pixel depth of field (-pd) in rpict.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "up_vector": {
          "title": "Up Vector",
          "description": "The view up (-vu) vector as an array of (x, y, z) values.",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "view_type": {
          "default": "v",
          "allOf": [
            {
              "$ref": "#/definitions/ViewType"
            }
          ]
        },
        "h_size": {
          "title": "H Size",
          "description": "A number for the horizontal field of view in degrees (for all perspective projections including fisheye). For a parallel projection, this is the view width in world coordinates.",
          "default": 60,
          "type": "number"
        },
        "v_size": {
          "title": "V Size",
          "description": "A number for the vertical field of view in degrees (for all perspective projections including fisheye). For a parallel projection, this is the view width in world coordinates.",
          "default": 60,
          "type": "number"
        },
        "shift": {
          "title": "Shift",
          "description": "The view shift (-vs). This is the amount the actual image will be shifted to the right of the specified view. This option is useful for generating skewed perspectives or rendering an image a piece at a time. A value of 1 means that the rendered image starts just to the right of the normal view. A value of -1 would be to the left. Larger or fractional values are permitted as well.",
          "type": "number"
        },
        "lift": {
          "title": "Lift",
          "description": "The view lift (-vl). This is the amount the actual image will be lifted up from the specified view. This option is useful for generating skewed perspectives or rendering an image a piece at a time. A value of 1 means that the rendered image starts just to the right of the normal view. A value of -1 would be to the left. Larger or fractional values are permitted as well.",
          "type": "number"
        },
        "fore_clip": {
          "title": "Fore Clip",
          "description": "View fore clip (-vo) at a distance from the view point.The plane will be perpendicular to the view direction for perspective and parallel view types. For fisheye view types, the clipping plane is actually a clipping sphere, centered on the view point with fore_clip radius. Objects in front of this imaginary surface will not be visible.",
          "type": "number"
        },
        "aft_clip": {
          "title": "Aft Clip",
          "description": "View aft clip (-va) at a distance from the view point.Like the view fore plane, it will be perpendicular to the view direction for perspective and parallel view types. For fisheye view types, the clipping plane is actually a clipping sphere, centered on the view point with radius val.",
          "type": "number"
        },
        "group_identifier": {
          "title": "Group Identifier",
          "description": "An optional string to note the view group '             'to which the sensor is a part of. Views sharing the same '             'group_identifier will be written to the same subfolder in Radiance '             'folder (default: None).",
          "type": "string"
        }
      },
      "required": [
        "identifier",
        "position",
        "direction",
        "up_vector"
      ],
      "additionalProperties": false
    },
    "ModelRadianceProperties": {
      "title": "ModelRadianceProperties",
      "description": "Radiance Properties for Honeybee Model.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ModelRadianceProperties",
          "pattern": "^ModelRadianceProperties$",
          "type": "string"
        },
        "modifiers": {
          "title": "Modifiers",
          "description": "A list of all unique modifiers in the model. This includes modifiers across all Faces, Apertures, Doors, Shades, Room ModifierSets, and the global_modifier_set.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Plastic"
              },
              {
                "$ref": "#/definitions/Glass"
              },
              {
                "$ref": "#/definitions/BSDF"
              },
              {
                "$ref": "#/definitions/Glow"
              },
              {
                "$ref": "#/definitions/Light"
              },
              {
                "$ref": "#/definitions/Trans"
              },
              {
                "$ref": "#/definitions/Metal"
              },
              {
                "$ref": "#/definitions/Void"
              },
              {
                "$ref": "#/definitions/Mirror"
              }
            ]
          }
        },
        "modifier_sets": {
          "title": "Modifier Sets",
          "description": "A list of all unique Room-Assigned ModifierSets in the Model.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ModifierSet"
              },
              {
                "$ref": "#/definitions/ModifierSetAbridged"
              }
            ]
          }
        },
        "sensor_grids": {
          "title": "Sensor Grids",
          "description": "An array of SensorGrids that are associated with the model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SensorGrid"
          }
        },
        "views": {
          "title": "Views",
          "description": "An array of Views that are associated with the model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/View"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelProperties": {
      "title": "ModelProperties",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "ModelProperties",
          "pattern": "^ModelProperties$",
          "type": "string"
        },
        "energy": {
          "$ref": "#/definitions/ModelEnergyProperties"
        },
        "radiance": {
          "$ref": "#/definitions/ModelRadianceProperties"
        }
      }
    }
  }
}